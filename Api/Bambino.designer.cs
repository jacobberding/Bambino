#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Api
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="edc")]
	public partial class BambinoDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertACAreaCategory(ACAreaCategory instance);
    partial void UpdateACAreaCategory(ACAreaCategory instance);
    partial void DeleteACAreaCategory(ACAreaCategory instance);
    partial void InsertACLayerCategory(ACLayerCategory instance);
    partial void UpdateACLayerCategory(ACLayerCategory instance);
    partial void DeleteACLayerCategory(ACLayerCategory instance);
    partial void InsertACLayer(ACLayer instance);
    partial void UpdateACLayer(ACLayer instance);
    partial void DeleteACLayer(ACLayer instance);
    partial void InsertACUnit(ACUnit instance);
    partial void UpdateACUnit(ACUnit instance);
    partial void DeleteACUnit(ACUnit instance);
    partial void InsertApiToken(ApiToken instance);
    partial void UpdateApiToken(ApiToken instance);
    partial void DeleteApiToken(ApiToken instance);
    partial void InsertCompany(Company instance);
    partial void UpdateCompany(Company instance);
    partial void DeleteCompany(Company instance);
    partial void InsertContactFile(ContactFile instance);
    partial void UpdateContactFile(ContactFile instance);
    partial void DeleteContactFile(ContactFile instance);
    partial void InsertContact(Contact instance);
    partial void UpdateContact(Contact instance);
    partial void DeleteContact(Contact instance);
    partial void InsertDiscipline(Discipline instance);
    partial void UpdateDiscipline(Discipline instance);
    partial void DeleteDiscipline(Discipline instance);
    partial void InsertEmail(Email instance);
    partial void UpdateEmail(Email instance);
    partial void DeleteEmail(Email instance);
    partial void InsertLog(Log instance);
    partial void UpdateLog(Log instance);
    partial void DeleteLog(Log instance);
    partial void InsertMaterialTagMaterial(MaterialTagMaterial instance);
    partial void UpdateMaterialTagMaterial(MaterialTagMaterial instance);
    partial void DeleteMaterialTagMaterial(MaterialTagMaterial instance);
    partial void InsertMaterialTag(MaterialTag instance);
    partial void UpdateMaterialTag(MaterialTag instance);
    partial void DeleteMaterialTag(MaterialTag instance);
    partial void InsertMemberCompany(MemberCompany instance);
    partial void UpdateMemberCompany(MemberCompany instance);
    partial void DeleteMemberCompany(MemberCompany instance);
    partial void InsertMemberIpAddress(MemberIpAddress instance);
    partial void UpdateMemberIpAddress(MemberIpAddress instance);
    partial void DeleteMemberIpAddress(MemberIpAddress instance);
    partial void InsertMemberRole(MemberRole instance);
    partial void UpdateMemberRole(MemberRole instance);
    partial void DeleteMemberRole(MemberRole instance);
    partial void InsertProjectAttraction(ProjectAttraction instance);
    partial void UpdateProjectAttraction(ProjectAttraction instance);
    partial void DeleteProjectAttraction(ProjectAttraction instance);
    partial void InsertProjectElement(ProjectElement instance);
    partial void UpdateProjectElement(ProjectElement instance);
    partial void DeleteProjectElement(ProjectElement instance);
    partial void InsertProjectMember(ProjectMember instance);
    partial void UpdateProjectMember(ProjectMember instance);
    partial void DeleteProjectMember(ProjectMember instance);
    partial void InsertProjectPhase(ProjectPhase instance);
    partial void UpdateProjectPhase(ProjectPhase instance);
    partial void DeleteProjectPhase(ProjectPhase instance);
    partial void InsertProject(Project instance);
    partial void UpdateProject(Project instance);
    partial void DeleteProject(Project instance);
    partial void InsertProjectWritingDocument(ProjectWritingDocument instance);
    partial void UpdateProjectWritingDocument(ProjectWritingDocument instance);
    partial void DeleteProjectWritingDocument(ProjectWritingDocument instance);
    partial void InsertProjectZoneArchive(ProjectZoneArchive instance);
    partial void UpdateProjectZoneArchive(ProjectZoneArchive instance);
    partial void DeleteProjectZoneArchive(ProjectZoneArchive instance);
    partial void InsertProjectZone(ProjectZone instance);
    partial void UpdateProjectZone(ProjectZone instance);
    partial void DeleteProjectZone(ProjectZone instance);
    partial void InsertReport(Report instance);
    partial void UpdateReport(Report instance);
    partial void DeleteReport(Report instance);
    partial void InsertRole(Role instance);
    partial void UpdateRole(Role instance);
    partial void DeleteRole(Role instance);
    partial void InsertSubTsk(SubTsk instance);
    partial void UpdateSubTsk(SubTsk instance);
    partial void DeleteSubTsk(SubTsk instance);
    partial void InsertTimeTrackerProject(TimeTrackerProject instance);
    partial void UpdateTimeTrackerProject(TimeTrackerProject instance);
    partial void DeleteTimeTrackerProject(TimeTrackerProject instance);
    partial void InsertTimeTracker(TimeTracker instance);
    partial void UpdateTimeTracker(TimeTracker instance);
    partial void DeleteTimeTracker(TimeTracker instance);
    partial void InsertTsk(Tsk instance);
    partial void UpdateTsk(Tsk instance);
    partial void DeleteTsk(Tsk instance);
    partial void InsertMaterialPriceOption(MaterialPriceOption instance);
    partial void UpdateMaterialPriceOption(MaterialPriceOption instance);
    partial void DeleteMaterialPriceOption(MaterialPriceOption instance);
    partial void InsertMaterial(Material instance);
    partial void UpdateMaterial(Material instance);
    partial void DeleteMaterial(Material instance);
    partial void InsertMember(Member instance);
    partial void UpdateMember(Member instance);
    partial void DeleteMember(Member instance);
    #endregion
		
		public BambinoDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["edcConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public BambinoDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BambinoDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BambinoDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public BambinoDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACAreaCategory> ACAreaCategories
		{
			get
			{
				return this.GetTable<ACAreaCategory>();
			}
		}
		
		public System.Data.Linq.Table<ACLayerCategory> ACLayerCategories
		{
			get
			{
				return this.GetTable<ACLayerCategory>();
			}
		}
		
		public System.Data.Linq.Table<ACLayer> ACLayers
		{
			get
			{
				return this.GetTable<ACLayer>();
			}
		}
		
		public System.Data.Linq.Table<ACUnit> ACUnits
		{
			get
			{
				return this.GetTable<ACUnit>();
			}
		}
		
		public System.Data.Linq.Table<ApiToken> ApiTokens
		{
			get
			{
				return this.GetTable<ApiToken>();
			}
		}
		
		public System.Data.Linq.Table<Company> Companies
		{
			get
			{
				return this.GetTable<Company>();
			}
		}
		
		public System.Data.Linq.Table<ContactFile> ContactFiles
		{
			get
			{
				return this.GetTable<ContactFile>();
			}
		}
		
		public System.Data.Linq.Table<Contact> Contacts
		{
			get
			{
				return this.GetTable<Contact>();
			}
		}
		
		public System.Data.Linq.Table<Discipline> Disciplines
		{
			get
			{
				return this.GetTable<Discipline>();
			}
		}
		
		public System.Data.Linq.Table<Email> Emails
		{
			get
			{
				return this.GetTable<Email>();
			}
		}
		
		public System.Data.Linq.Table<Log> Logs
		{
			get
			{
				return this.GetTable<Log>();
			}
		}
		
		public System.Data.Linq.Table<MaterialTagMaterial> MaterialTagMaterials
		{
			get
			{
				return this.GetTable<MaterialTagMaterial>();
			}
		}
		
		public System.Data.Linq.Table<MaterialTag> MaterialTags
		{
			get
			{
				return this.GetTable<MaterialTag>();
			}
		}
		
		public System.Data.Linq.Table<MemberCompany> MemberCompanies
		{
			get
			{
				return this.GetTable<MemberCompany>();
			}
		}
		
		public System.Data.Linq.Table<MemberIpAddress> MemberIpAddresses
		{
			get
			{
				return this.GetTable<MemberIpAddress>();
			}
		}
		
		public System.Data.Linq.Table<MemberRole> MemberRoles
		{
			get
			{
				return this.GetTable<MemberRole>();
			}
		}
		
		public System.Data.Linq.Table<ProjectAttraction> ProjectAttractions
		{
			get
			{
				return this.GetTable<ProjectAttraction>();
			}
		}
		
		public System.Data.Linq.Table<ProjectElement> ProjectElements
		{
			get
			{
				return this.GetTable<ProjectElement>();
			}
		}
		
		public System.Data.Linq.Table<ProjectMember> ProjectMembers
		{
			get
			{
				return this.GetTable<ProjectMember>();
			}
		}
		
		public System.Data.Linq.Table<ProjectPhase> ProjectPhases
		{
			get
			{
				return this.GetTable<ProjectPhase>();
			}
		}
		
		public System.Data.Linq.Table<Project> Projects
		{
			get
			{
				return this.GetTable<Project>();
			}
		}
		
		public System.Data.Linq.Table<ProjectWritingDocument> ProjectWritingDocuments
		{
			get
			{
				return this.GetTable<ProjectWritingDocument>();
			}
		}
		
		public System.Data.Linq.Table<ProjectZoneArchive> ProjectZoneArchives
		{
			get
			{
				return this.GetTable<ProjectZoneArchive>();
			}
		}
		
		public System.Data.Linq.Table<ProjectZone> ProjectZones
		{
			get
			{
				return this.GetTable<ProjectZone>();
			}
		}
		
		public System.Data.Linq.Table<Report> Reports
		{
			get
			{
				return this.GetTable<Report>();
			}
		}
		
		public System.Data.Linq.Table<Role> Roles
		{
			get
			{
				return this.GetTable<Role>();
			}
		}
		
		public System.Data.Linq.Table<SubTsk> SubTsks
		{
			get
			{
				return this.GetTable<SubTsk>();
			}
		}
		
		public System.Data.Linq.Table<TimeTrackerProject> TimeTrackerProjects
		{
			get
			{
				return this.GetTable<TimeTrackerProject>();
			}
		}
		
		public System.Data.Linq.Table<TimeTracker> TimeTrackers
		{
			get
			{
				return this.GetTable<TimeTracker>();
			}
		}
		
		public System.Data.Linq.Table<Tsk> Tsks
		{
			get
			{
				return this.GetTable<Tsk>();
			}
		}
		
		public System.Data.Linq.Table<MaterialPriceOption> MaterialPriceOptions
		{
			get
			{
				return this.GetTable<MaterialPriceOption>();
			}
		}
		
		public System.Data.Linq.Table<Material> Materials
		{
			get
			{
				return this.GetTable<Material>();
			}
		}
		
		public System.Data.Linq.Table<Member> Members
		{
			get
			{
				return this.GetTable<Member>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACAreaCategories")]
	public partial class ACAreaCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _acAreaCategoryId;
		
		private string _name;
		
		private bool _isDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnacAreaCategoryIdChanging(System.Guid value);
    partial void OnacAreaCategoryIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public ACAreaCategory()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acAreaCategoryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid acAreaCategoryId
		{
			get
			{
				return this._acAreaCategoryId;
			}
			set
			{
				if ((this._acAreaCategoryId != value))
				{
					this.OnacAreaCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._acAreaCategoryId = value;
					this.SendPropertyChanged("acAreaCategoryId");
					this.OnacAreaCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACLayerCategories")]
	public partial class ACLayerCategory : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _acLayerCategoryId;
		
		private string _name;
		
		private string _value;
		
		private string _description;
		
		private bool _isDeleted;
		
		private EntitySet<ACLayer> _ACLayers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnacLayerCategoryIdChanging(System.Guid value);
    partial void OnacLayerCategoryIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public ACLayerCategory()
		{
			this._ACLayers = new EntitySet<ACLayer>(new Action<ACLayer>(this.attach_ACLayers), new Action<ACLayer>(this.detach_ACLayers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acLayerCategoryId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid acLayerCategoryId
		{
			get
			{
				return this._acLayerCategoryId;
			}
			set
			{
				if ((this._acLayerCategoryId != value))
				{
					this.OnacLayerCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._acLayerCategoryId = value;
					this.SendPropertyChanged("acLayerCategoryId");
					this.OnacLayerCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACLayerCategory_ACLayer", Storage="_ACLayers", ThisKey="acLayerCategoryId", OtherKey="acLayerCategoryId")]
		public EntitySet<ACLayer> ACLayers
		{
			get
			{
				return this._ACLayers;
			}
			set
			{
				this._ACLayers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACLayers(ACLayer entity)
		{
			this.SendPropertyChanging();
			entity.ACLayerCategory = this;
		}
		
		private void detach_ACLayers(ACLayer entity)
		{
			this.SendPropertyChanging();
			entity.ACLayerCategory = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACLayers")]
	public partial class ACLayer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _acLayerId;
		
		private System.Guid _acLayerCategoryId;
		
		private string _name;
		
		private string _color;
		
		private string _lineWeight;
		
		private string _lineType;
		
		private int _transparency;
		
		private string _measurement;
		
		private string _code;
		
		private string _keywords;
		
		private string _description;
		
		private bool _isPlottable;
		
		private bool _isDeleted;
		
		private EntityRef<ACLayerCategory> _ACLayerCategory;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnacLayerIdChanging(System.Guid value);
    partial void OnacLayerIdChanged();
    partial void OnacLayerCategoryIdChanging(System.Guid value);
    partial void OnacLayerCategoryIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OncolorChanging(string value);
    partial void OncolorChanged();
    partial void OnlineWeightChanging(string value);
    partial void OnlineWeightChanged();
    partial void OnlineTypeChanging(string value);
    partial void OnlineTypeChanged();
    partial void OntransparencyChanging(int value);
    partial void OntransparencyChanged();
    partial void OnmeasurementChanging(string value);
    partial void OnmeasurementChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnkeywordsChanging(string value);
    partial void OnkeywordsChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnisPlottableChanging(bool value);
    partial void OnisPlottableChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public ACLayer()
		{
			this._ACLayerCategory = default(EntityRef<ACLayerCategory>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acLayerId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid acLayerId
		{
			get
			{
				return this._acLayerId;
			}
			set
			{
				if ((this._acLayerId != value))
				{
					this.OnacLayerIdChanging(value);
					this.SendPropertyChanging();
					this._acLayerId = value;
					this.SendPropertyChanged("acLayerId");
					this.OnacLayerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acLayerCategoryId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid acLayerCategoryId
		{
			get
			{
				return this._acLayerCategoryId;
			}
			set
			{
				if ((this._acLayerCategoryId != value))
				{
					if (this._ACLayerCategory.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnacLayerCategoryIdChanging(value);
					this.SendPropertyChanging();
					this._acLayerCategoryId = value;
					this.SendPropertyChanged("acLayerCategoryId");
					this.OnacLayerCategoryIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_color", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string color
		{
			get
			{
				return this._color;
			}
			set
			{
				if ((this._color != value))
				{
					this.OncolorChanging(value);
					this.SendPropertyChanging();
					this._color = value;
					this.SendPropertyChanged("color");
					this.OncolorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineWeight", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lineWeight
		{
			get
			{
				return this._lineWeight;
			}
			set
			{
				if ((this._lineWeight != value))
				{
					this.OnlineWeightChanging(value);
					this.SendPropertyChanging();
					this._lineWeight = value;
					this.SendPropertyChanged("lineWeight");
					this.OnlineWeightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lineType", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lineType
		{
			get
			{
				return this._lineType;
			}
			set
			{
				if ((this._lineType != value))
				{
					this.OnlineTypeChanging(value);
					this.SendPropertyChanging();
					this._lineType = value;
					this.SendPropertyChanged("lineType");
					this.OnlineTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transparency", DbType="Int NOT NULL")]
		public int transparency
		{
			get
			{
				return this._transparency;
			}
			set
			{
				if ((this._transparency != value))
				{
					this.OntransparencyChanging(value);
					this.SendPropertyChanging();
					this._transparency = value;
					this.SendPropertyChanged("transparency");
					this.OntransparencyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_measurement", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string measurement
		{
			get
			{
				return this._measurement;
			}
			set
			{
				if ((this._measurement != value))
				{
					this.OnmeasurementChanging(value);
					this.SendPropertyChanging();
					this._measurement = value;
					this.SendPropertyChanged("measurement");
					this.OnmeasurementChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keywords", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string keywords
		{
			get
			{
				return this._keywords;
			}
			set
			{
				if ((this._keywords != value))
				{
					this.OnkeywordsChanging(value);
					this.SendPropertyChanging();
					this._keywords = value;
					this.SendPropertyChanged("keywords");
					this.OnkeywordsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPlottable", DbType="Bit NOT NULL")]
		public bool isPlottable
		{
			get
			{
				return this._isPlottable;
			}
			set
			{
				if ((this._isPlottable != value))
				{
					this.OnisPlottableChanging(value);
					this.SendPropertyChanging();
					this._isPlottable = value;
					this.SendPropertyChanged("isPlottable");
					this.OnisPlottableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ACLayerCategory_ACLayer", Storage="_ACLayerCategory", ThisKey="acLayerCategoryId", OtherKey="acLayerCategoryId", IsForeignKey=true)]
		public ACLayerCategory ACLayerCategory
		{
			get
			{
				return this._ACLayerCategory.Entity;
			}
			set
			{
				ACLayerCategory previousValue = this._ACLayerCategory.Entity;
				if (((previousValue != value) 
							|| (this._ACLayerCategory.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ACLayerCategory.Entity = null;
						previousValue.ACLayers.Remove(this);
					}
					this._ACLayerCategory.Entity = value;
					if ((value != null))
					{
						value.ACLayers.Add(this);
						this._acLayerCategoryId = value.acLayerCategoryId;
					}
					else
					{
						this._acLayerCategoryId = default(System.Guid);
					}
					this.SendPropertyChanged("ACLayerCategory");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACUnits")]
	public partial class ACUnit : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _acUnitId;
		
		private string _name;
		
		private int _value;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnacUnitIdChanging(System.Guid value);
    partial void OnacUnitIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(int value);
    partial void OnvalueChanged();
    #endregion
		
		public ACUnit()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acUnitId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid acUnitId
		{
			get
			{
				return this._acUnitId;
			}
			set
			{
				if ((this._acUnitId != value))
				{
					this.OnacUnitIdChanging(value);
					this.SendPropertyChanging();
					this._acUnitId = value;
					this.SendPropertyChanged("acUnitId");
					this.OnacUnitIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="Int NOT NULL")]
		public int value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ApiTokens")]
	public partial class ApiToken : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _apiTokenId;
		
		private int _accessLevel;
		
		private string _companyName;
		
		private string _adminName;
		
		private string _adminEmail;
		
		private string _adminPhone;
		
		private bool _isDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnapiTokenIdChanging(System.Guid value);
    partial void OnapiTokenIdChanged();
    partial void OnaccessLevelChanging(int value);
    partial void OnaccessLevelChanged();
    partial void OncompanyNameChanging(string value);
    partial void OncompanyNameChanged();
    partial void OnadminNameChanging(string value);
    partial void OnadminNameChanged();
    partial void OnadminEmailChanging(string value);
    partial void OnadminEmailChanged();
    partial void OnadminPhoneChanging(string value);
    partial void OnadminPhoneChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public ApiToken()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_apiTokenId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid apiTokenId
		{
			get
			{
				return this._apiTokenId;
			}
			set
			{
				if ((this._apiTokenId != value))
				{
					this.OnapiTokenIdChanging(value);
					this.SendPropertyChanging();
					this._apiTokenId = value;
					this.SendPropertyChanged("apiTokenId");
					this.OnapiTokenIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accessLevel", DbType="Int NOT NULL")]
		public int accessLevel
		{
			get
			{
				return this._accessLevel;
			}
			set
			{
				if ((this._accessLevel != value))
				{
					this.OnaccessLevelChanging(value);
					this.SendPropertyChanging();
					this._accessLevel = value;
					this.SendPropertyChanged("accessLevel");
					this.OnaccessLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string companyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OncompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("companyName");
					this.OncompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string adminName
		{
			get
			{
				return this._adminName;
			}
			set
			{
				if ((this._adminName != value))
				{
					this.OnadminNameChanging(value);
					this.SendPropertyChanging();
					this._adminName = value;
					this.SendPropertyChanged("adminName");
					this.OnadminNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminEmail", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string adminEmail
		{
			get
			{
				return this._adminEmail;
			}
			set
			{
				if ((this._adminEmail != value))
				{
					this.OnadminEmailChanging(value);
					this.SendPropertyChanging();
					this._adminEmail = value;
					this.SendPropertyChanged("adminEmail");
					this.OnadminEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adminPhone", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string adminPhone
		{
			get
			{
				return this._adminPhone;
			}
			set
			{
				if ((this._adminPhone != value))
				{
					this.OnadminPhoneChanging(value);
					this.SendPropertyChanging();
					this._adminPhone = value;
					this.SendPropertyChanged("adminPhone");
					this.OnadminPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Companies")]
	public partial class Company : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _companyId;
		
		private int _type;
		
		private int _terms;
		
		private string _name;
		
		private int _pin;
		
		private string _email;
		
		private string _phone;
		
		private string _website;
		
		private string _billingAddressLine1;
		
		private string _billingAddressLine2;
		
		private string _billingCity;
		
		private string _billingState;
		
		private string _billingZip;
		
		private string _shippingAddressLine1;
		
		private string _shippingAddressLine2;
		
		private string _shippingCity;
		
		private string _shippingState;
		
		private string _shippingZip;
		
		private bool _isApproved;
		
		private bool _isDeleted;
		
		private EntitySet<MemberCompany> _MemberCompanies;
		
		private EntitySet<Project> _Projects;
		
		private EntitySet<Member> _Members;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncompanyIdChanging(System.Guid value);
    partial void OncompanyIdChanged();
    partial void OntypeChanging(int value);
    partial void OntypeChanged();
    partial void OntermsChanging(int value);
    partial void OntermsChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpinChanging(int value);
    partial void OnpinChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnwebsiteChanging(string value);
    partial void OnwebsiteChanged();
    partial void OnbillingAddressLine1Changing(string value);
    partial void OnbillingAddressLine1Changed();
    partial void OnbillingAddressLine2Changing(string value);
    partial void OnbillingAddressLine2Changed();
    partial void OnbillingCityChanging(string value);
    partial void OnbillingCityChanged();
    partial void OnbillingStateChanging(string value);
    partial void OnbillingStateChanged();
    partial void OnbillingZipChanging(string value);
    partial void OnbillingZipChanged();
    partial void OnshippingAddressLine1Changing(string value);
    partial void OnshippingAddressLine1Changed();
    partial void OnshippingAddressLine2Changing(string value);
    partial void OnshippingAddressLine2Changed();
    partial void OnshippingCityChanging(string value);
    partial void OnshippingCityChanged();
    partial void OnshippingStateChanging(string value);
    partial void OnshippingStateChanged();
    partial void OnshippingZipChanging(string value);
    partial void OnshippingZipChanged();
    partial void OnisApprovedChanging(bool value);
    partial void OnisApprovedChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public Company()
		{
			this._MemberCompanies = new EntitySet<MemberCompany>(new Action<MemberCompany>(this.attach_MemberCompanies), new Action<MemberCompany>(this.detach_MemberCompanies));
			this._Projects = new EntitySet<Project>(new Action<Project>(this.attach_Projects), new Action<Project>(this.detach_Projects));
			this._Members = new EntitySet<Member>(new Action<Member>(this.attach_Members), new Action<Member>(this.detach_Members));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid companyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					this.OncompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("companyId");
					this.OncompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="Int NOT NULL")]
		public int type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_terms", DbType="Int NOT NULL")]
		public int terms
		{
			get
			{
				return this._terms;
			}
			set
			{
				if ((this._terms != value))
				{
					this.OntermsChanging(value);
					this.SendPropertyChanging();
					this._terms = value;
					this.SendPropertyChanged("terms");
					this.OntermsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pin", DbType="Int NOT NULL")]
		public int pin
		{
			get
			{
				return this._pin;
			}
			set
			{
				if ((this._pin != value))
				{
					this.OnpinChanging(value);
					this.SendPropertyChanging();
					this._pin = value;
					this.SendPropertyChanged("pin");
					this.OnpinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_website", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string website
		{
			get
			{
				return this._website;
			}
			set
			{
				if ((this._website != value))
				{
					this.OnwebsiteChanging(value);
					this.SendPropertyChanging();
					this._website = value;
					this.SendPropertyChanged("website");
					this.OnwebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billingAddressLine1", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string billingAddressLine1
		{
			get
			{
				return this._billingAddressLine1;
			}
			set
			{
				if ((this._billingAddressLine1 != value))
				{
					this.OnbillingAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._billingAddressLine1 = value;
					this.SendPropertyChanged("billingAddressLine1");
					this.OnbillingAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billingAddressLine2", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string billingAddressLine2
		{
			get
			{
				return this._billingAddressLine2;
			}
			set
			{
				if ((this._billingAddressLine2 != value))
				{
					this.OnbillingAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._billingAddressLine2 = value;
					this.SendPropertyChanged("billingAddressLine2");
					this.OnbillingAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billingCity", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string billingCity
		{
			get
			{
				return this._billingCity;
			}
			set
			{
				if ((this._billingCity != value))
				{
					this.OnbillingCityChanging(value);
					this.SendPropertyChanging();
					this._billingCity = value;
					this.SendPropertyChanged("billingCity");
					this.OnbillingCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billingState", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string billingState
		{
			get
			{
				return this._billingState;
			}
			set
			{
				if ((this._billingState != value))
				{
					this.OnbillingStateChanging(value);
					this.SendPropertyChanging();
					this._billingState = value;
					this.SendPropertyChanged("billingState");
					this.OnbillingStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billingZip", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string billingZip
		{
			get
			{
				return this._billingZip;
			}
			set
			{
				if ((this._billingZip != value))
				{
					this.OnbillingZipChanging(value);
					this.SendPropertyChanging();
					this._billingZip = value;
					this.SendPropertyChanged("billingZip");
					this.OnbillingZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippingAddressLine1", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string shippingAddressLine1
		{
			get
			{
				return this._shippingAddressLine1;
			}
			set
			{
				if ((this._shippingAddressLine1 != value))
				{
					this.OnshippingAddressLine1Changing(value);
					this.SendPropertyChanging();
					this._shippingAddressLine1 = value;
					this.SendPropertyChanged("shippingAddressLine1");
					this.OnshippingAddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippingAddressLine2", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string shippingAddressLine2
		{
			get
			{
				return this._shippingAddressLine2;
			}
			set
			{
				if ((this._shippingAddressLine2 != value))
				{
					this.OnshippingAddressLine2Changing(value);
					this.SendPropertyChanging();
					this._shippingAddressLine2 = value;
					this.SendPropertyChanged("shippingAddressLine2");
					this.OnshippingAddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippingCity", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string shippingCity
		{
			get
			{
				return this._shippingCity;
			}
			set
			{
				if ((this._shippingCity != value))
				{
					this.OnshippingCityChanging(value);
					this.SendPropertyChanging();
					this._shippingCity = value;
					this.SendPropertyChanged("shippingCity");
					this.OnshippingCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippingState", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string shippingState
		{
			get
			{
				return this._shippingState;
			}
			set
			{
				if ((this._shippingState != value))
				{
					this.OnshippingStateChanging(value);
					this.SendPropertyChanging();
					this._shippingState = value;
					this.SendPropertyChanged("shippingState");
					this.OnshippingStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_shippingZip", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
		public string shippingZip
		{
			get
			{
				return this._shippingZip;
			}
			set
			{
				if ((this._shippingZip != value))
				{
					this.OnshippingZipChanging(value);
					this.SendPropertyChanging();
					this._shippingZip = value;
					this.SendPropertyChanged("shippingZip");
					this.OnshippingZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isApproved", DbType="Bit NOT NULL")]
		public bool isApproved
		{
			get
			{
				return this._isApproved;
			}
			set
			{
				if ((this._isApproved != value))
				{
					this.OnisApprovedChanging(value);
					this.SendPropertyChanging();
					this._isApproved = value;
					this.SendPropertyChanged("isApproved");
					this.OnisApprovedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_MemberCompany", Storage="_MemberCompanies", ThisKey="companyId", OtherKey="companyId")]
		public EntitySet<MemberCompany> MemberCompanies
		{
			get
			{
				return this._MemberCompanies;
			}
			set
			{
				this._MemberCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Project", Storage="_Projects", ThisKey="companyId", OtherKey="companyId")]
		public EntitySet<Project> Projects
		{
			get
			{
				return this._Projects;
			}
			set
			{
				this._Projects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Member", Storage="_Members", ThisKey="companyId", OtherKey="activeCompanyId")]
		public EntitySet<Member> Members
		{
			get
			{
				return this._Members;
			}
			set
			{
				this._Members.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MemberCompanies(MemberCompany entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_MemberCompanies(MemberCompany entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Projects(Project entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
		
		private void attach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.Company = this;
		}
		
		private void detach_Members(Member entity)
		{
			this.SendPropertyChanging();
			entity.Company = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ContactFiles")]
	public partial class ContactFile : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _contactFileId;
		
		private System.Guid _contactId;
		
		private string _name;
		
		private string _path;
		
		private string _originalFileName;
		
		private bool _isDeleted;
		
		private EntityRef<Contact> _Contact;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncontactFileIdChanging(System.Guid value);
    partial void OncontactFileIdChanged();
    partial void OncontactIdChanging(System.Guid value);
    partial void OncontactIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    partial void OnoriginalFileNameChanging(string value);
    partial void OnoriginalFileNameChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public ContactFile()
		{
			this._Contact = default(EntityRef<Contact>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactFileId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid contactFileId
		{
			get
			{
				return this._contactFileId;
			}
			set
			{
				if ((this._contactFileId != value))
				{
					this.OncontactFileIdChanging(value);
					this.SendPropertyChanging();
					this._contactFileId = value;
					this.SendPropertyChanged("contactFileId");
					this.OncontactFileIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid contactId
		{
			get
			{
				return this._contactId;
			}
			set
			{
				if ((this._contactId != value))
				{
					if (this._Contact.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncontactIdChanging(value);
					this.SendPropertyChanging();
					this._contactId = value;
					this.SendPropertyChanged("contactId");
					this.OncontactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_originalFileName", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string originalFileName
		{
			get
			{
				return this._originalFileName;
			}
			set
			{
				if ((this._originalFileName != value))
				{
					this.OnoriginalFileNameChanging(value);
					this.SendPropertyChanging();
					this._originalFileName = value;
					this.SendPropertyChanged("originalFileName");
					this.OnoriginalFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ContactFile", Storage="_Contact", ThisKey="contactId", OtherKey="contactId", IsForeignKey=true)]
		public Contact Contact
		{
			get
			{
				return this._Contact.Entity;
			}
			set
			{
				Contact previousValue = this._Contact.Entity;
				if (((previousValue != value) 
							|| (this._Contact.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contact.Entity = null;
						previousValue.ContactFiles.Remove(this);
					}
					this._Contact.Entity = value;
					if ((value != null))
					{
						value.ContactFiles.Add(this);
						this._contactId = value.contactId;
					}
					else
					{
						this._contactId = default(System.Guid);
					}
					this.SendPropertyChanged("Contact");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contacts")]
	public partial class Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _contactId;
		
		private string _name;
		
		private string _title;
		
		private string _companyName;
		
		private string _phone1;
		
		private string _phone2;
		
		private string _skypeId;
		
		private string _email;
		
		private string _companyTemp;
		
		private string _resume;
		
		private string _portfolio;
		
		private string _personalWebsite;
		
		private string _skills;
		
		private System.DateTimeOffset _dateCreated;
		
		private bool _isEdcFamily;
		
		private bool _isPotentialStaffing;
		
		private bool _isDeleted;
		
		private EntitySet<ContactFile> _ContactFiles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncontactIdChanging(System.Guid value);
    partial void OncontactIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OntitleChanging(string value);
    partial void OntitleChanged();
    partial void OncompanyNameChanging(string value);
    partial void OncompanyNameChanged();
    partial void Onphone1Changing(string value);
    partial void Onphone1Changed();
    partial void Onphone2Changing(string value);
    partial void Onphone2Changed();
    partial void OnskypeIdChanging(string value);
    partial void OnskypeIdChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OncompanyTempChanging(string value);
    partial void OncompanyTempChanged();
    partial void OnresumeChanging(string value);
    partial void OnresumeChanged();
    partial void OnportfolioChanging(string value);
    partial void OnportfolioChanged();
    partial void OnpersonalWebsiteChanging(string value);
    partial void OnpersonalWebsiteChanged();
    partial void OnskillsChanging(string value);
    partial void OnskillsChanged();
    partial void OndateCreatedChanging(System.DateTimeOffset value);
    partial void OndateCreatedChanged();
    partial void OnisEdcFamilyChanging(bool value);
    partial void OnisEdcFamilyChanged();
    partial void OnisPotentialStaffingChanging(bool value);
    partial void OnisPotentialStaffingChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public Contact()
		{
			this._ContactFiles = new EntitySet<ContactFile>(new Action<ContactFile>(this.attach_ContactFiles), new Action<ContactFile>(this.detach_ContactFiles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid contactId
		{
			get
			{
				return this._contactId;
			}
			set
			{
				if ((this._contactId != value))
				{
					this.OncontactIdChanging(value);
					this.SendPropertyChanging();
					this._contactId = value;
					this.SendPropertyChanged("contactId");
					this.OncontactIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_title", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string title
		{
			get
			{
				return this._title;
			}
			set
			{
				if ((this._title != value))
				{
					this.OntitleChanging(value);
					this.SendPropertyChanging();
					this._title = value;
					this.SendPropertyChanged("title");
					this.OntitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyName", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string companyName
		{
			get
			{
				return this._companyName;
			}
			set
			{
				if ((this._companyName != value))
				{
					this.OncompanyNameChanging(value);
					this.SendPropertyChanging();
					this._companyName = value;
					this.SendPropertyChanged("companyName");
					this.OncompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone1", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string phone1
		{
			get
			{
				return this._phone1;
			}
			set
			{
				if ((this._phone1 != value))
				{
					this.Onphone1Changing(value);
					this.SendPropertyChanging();
					this._phone1 = value;
					this.SendPropertyChanged("phone1");
					this.Onphone1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone2", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string phone2
		{
			get
			{
				return this._phone2;
			}
			set
			{
				if ((this._phone2 != value))
				{
					this.Onphone2Changing(value);
					this.SendPropertyChanging();
					this._phone2 = value;
					this.SendPropertyChanged("phone2");
					this.Onphone2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skypeId", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string skypeId
		{
			get
			{
				return this._skypeId;
			}
			set
			{
				if ((this._skypeId != value))
				{
					this.OnskypeIdChanging(value);
					this.SendPropertyChanging();
					this._skypeId = value;
					this.SendPropertyChanged("skypeId");
					this.OnskypeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyTemp", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string companyTemp
		{
			get
			{
				return this._companyTemp;
			}
			set
			{
				if ((this._companyTemp != value))
				{
					this.OncompanyTempChanging(value);
					this.SendPropertyChanging();
					this._companyTemp = value;
					this.SendPropertyChanged("companyTemp");
					this.OncompanyTempChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_resume", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string resume
		{
			get
			{
				return this._resume;
			}
			set
			{
				if ((this._resume != value))
				{
					this.OnresumeChanging(value);
					this.SendPropertyChanging();
					this._resume = value;
					this.SendPropertyChanged("resume");
					this.OnresumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_portfolio", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string portfolio
		{
			get
			{
				return this._portfolio;
			}
			set
			{
				if ((this._portfolio != value))
				{
					this.OnportfolioChanging(value);
					this.SendPropertyChanging();
					this._portfolio = value;
					this.SendPropertyChanged("portfolio");
					this.OnportfolioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personalWebsite", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string personalWebsite
		{
			get
			{
				return this._personalWebsite;
			}
			set
			{
				if ((this._personalWebsite != value))
				{
					this.OnpersonalWebsiteChanging(value);
					this.SendPropertyChanging();
					this._personalWebsite = value;
					this.SendPropertyChanged("personalWebsite");
					this.OnpersonalWebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skills", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string skills
		{
			get
			{
				return this._skills;
			}
			set
			{
				if ((this._skills != value))
				{
					this.OnskillsChanging(value);
					this.SendPropertyChanging();
					this._skills = value;
					this.SendPropertyChanged("skills");
					this.OnskillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isEdcFamily", DbType="Bit NOT NULL")]
		public bool isEdcFamily
		{
			get
			{
				return this._isEdcFamily;
			}
			set
			{
				if ((this._isEdcFamily != value))
				{
					this.OnisEdcFamilyChanging(value);
					this.SendPropertyChanging();
					this._isEdcFamily = value;
					this.SendPropertyChanged("isEdcFamily");
					this.OnisEdcFamilyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPotentialStaffing", DbType="Bit NOT NULL")]
		public bool isPotentialStaffing
		{
			get
			{
				return this._isPotentialStaffing;
			}
			set
			{
				if ((this._isPotentialStaffing != value))
				{
					this.OnisPotentialStaffingChanging(value);
					this.SendPropertyChanging();
					this._isPotentialStaffing = value;
					this.SendPropertyChanged("isPotentialStaffing");
					this.OnisPotentialStaffingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contact_ContactFile", Storage="_ContactFiles", ThisKey="contactId", OtherKey="contactId")]
		public EntitySet<ContactFile> ContactFiles
		{
			get
			{
				return this._ContactFiles;
			}
			set
			{
				this._ContactFiles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ContactFiles(ContactFile entity)
		{
			this.SendPropertyChanging();
			entity.Contact = this;
		}
		
		private void detach_ContactFiles(ContactFile entity)
		{
			this.SendPropertyChanging();
			entity.Contact = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Disciplines")]
	public partial class Discipline : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _disciplineId;
		
		private string _name;
		
		private string _value;
		
		private string _description;
		
		private bool _isDeleted;
		
		private EntitySet<ProjectElement> _ProjectElements;
		
		private EntitySet<Material> _Materials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OndisciplineIdChanging(System.Guid value);
    partial void OndisciplineIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnvalueChanging(string value);
    partial void OnvalueChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public Discipline()
		{
			this._ProjectElements = new EntitySet<ProjectElement>(new Action<ProjectElement>(this.attach_ProjectElements), new Action<ProjectElement>(this.detach_ProjectElements));
			this._Materials = new EntitySet<Material>(new Action<Material>(this.attach_Materials), new Action<Material>(this.detach_Materials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disciplineId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid disciplineId
		{
			get
			{
				return this._disciplineId;
			}
			set
			{
				if ((this._disciplineId != value))
				{
					this.OndisciplineIdChanging(value);
					this.SendPropertyChanging();
					this._disciplineId = value;
					this.SendPropertyChanged("disciplineId");
					this.OndisciplineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_value", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string value
		{
			get
			{
				return this._value;
			}
			set
			{
				if ((this._value != value))
				{
					this.OnvalueChanging(value);
					this.SendPropertyChanging();
					this._value = value;
					this.SendPropertyChanged("value");
					this.OnvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discipline_ProjectElement", Storage="_ProjectElements", ThisKey="disciplineId", OtherKey="disciplineId")]
		public EntitySet<ProjectElement> ProjectElements
		{
			get
			{
				return this._ProjectElements;
			}
			set
			{
				this._ProjectElements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discipline_Material", Storage="_Materials", ThisKey="disciplineId", OtherKey="disciplineId")]
		public EntitySet<Material> Materials
		{
			get
			{
				return this._Materials;
			}
			set
			{
				this._Materials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectElements(ProjectElement entity)
		{
			this.SendPropertyChanging();
			entity.Discipline = this;
		}
		
		private void detach_ProjectElements(ProjectElement entity)
		{
			this.SendPropertyChanging();
			entity.Discipline = null;
		}
		
		private void attach_Materials(Material entity)
		{
			this.SendPropertyChanging();
			entity.Discipline = this;
		}
		
		private void detach_Materials(Material entity)
		{
			this.SendPropertyChanging();
			entity.Discipline = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Emails")]
	public partial class Email : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _emailId;
		
		private string _subject;
		
		private string _body;
		
		private bool _isDeleted;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnemailIdChanging(System.Guid value);
    partial void OnemailIdChanged();
    partial void OnsubjectChanging(string value);
    partial void OnsubjectChanged();
    partial void OnbodyChanging(string value);
    partial void OnbodyChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public Email()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid emailId
		{
			get
			{
				return this._emailId;
			}
			set
			{
				if ((this._emailId != value))
				{
					this.OnemailIdChanging(value);
					this.SendPropertyChanging();
					this._emailId = value;
					this.SendPropertyChanged("emailId");
					this.OnemailIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subject", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string subject
		{
			get
			{
				return this._subject;
			}
			set
			{
				if ((this._subject != value))
				{
					this.OnsubjectChanging(value);
					this.SendPropertyChanging();
					this._subject = value;
					this.SendPropertyChanged("subject");
					this.OnsubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_body", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string body
		{
			get
			{
				return this._body;
			}
			set
			{
				if ((this._body != value))
				{
					this.OnbodyChanging(value);
					this.SendPropertyChanging();
					this._body = value;
					this.SendPropertyChanged("body");
					this.OnbodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Logs")]
	public partial class Log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _logId;
		
		private System.Guid _memberId;
		
		private string _activity;
		
		private string _controllerName;
		
		private string _methodName;
		
		private string _tableName;
		
		private System.Guid _tableId;
		
		private System.DateTimeOffset _createdDate;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlogIdChanging(System.Guid value);
    partial void OnlogIdChanged();
    partial void OnmemberIdChanging(System.Guid value);
    partial void OnmemberIdChanged();
    partial void OnactivityChanging(string value);
    partial void OnactivityChanged();
    partial void OncontrollerNameChanging(string value);
    partial void OncontrollerNameChanged();
    partial void OnmethodNameChanging(string value);
    partial void OnmethodNameChanged();
    partial void OntableNameChanging(string value);
    partial void OntableNameChanged();
    partial void OntableIdChanging(System.Guid value);
    partial void OntableIdChanged();
    partial void OncreatedDateChanging(System.DateTimeOffset value);
    partial void OncreatedDateChanged();
    #endregion
		
		public Log()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid logId
		{
			get
			{
				return this._logId;
			}
			set
			{
				if ((this._logId != value))
				{
					this.OnlogIdChanging(value);
					this.SendPropertyChanging();
					this._logId = value;
					this.SendPropertyChanged("logId");
					this.OnlogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activity", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string activity
		{
			get
			{
				return this._activity;
			}
			set
			{
				if ((this._activity != value))
				{
					this.OnactivityChanging(value);
					this.SendPropertyChanging();
					this._activity = value;
					this.SendPropertyChanged("activity");
					this.OnactivityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_controllerName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string controllerName
		{
			get
			{
				return this._controllerName;
			}
			set
			{
				if ((this._controllerName != value))
				{
					this.OncontrollerNameChanging(value);
					this.SendPropertyChanging();
					this._controllerName = value;
					this.SendPropertyChanged("controllerName");
					this.OncontrollerNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_methodName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string methodName
		{
			get
			{
				return this._methodName;
			}
			set
			{
				if ((this._methodName != value))
				{
					this.OnmethodNameChanging(value);
					this.SendPropertyChanging();
					this._methodName = value;
					this.SendPropertyChanged("methodName");
					this.OnmethodNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tableName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string tableName
		{
			get
			{
				return this._tableName;
			}
			set
			{
				if ((this._tableName != value))
				{
					this.OntableNameChanging(value);
					this.SendPropertyChanging();
					this._tableName = value;
					this.SendPropertyChanged("tableName");
					this.OntableNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tableId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid tableId
		{
			get
			{
				return this._tableId;
			}
			set
			{
				if ((this._tableId != value))
				{
					this.OntableIdChanging(value);
					this.SendPropertyChanging();
					this._tableId = value;
					this.SendPropertyChanged("tableId");
					this.OntableIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Log", Storage="_Member", ThisKey="memberId", OtherKey="memberId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Logs.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Logs.Add(this);
						this._memberId = value.memberId;
					}
					else
					{
						this._memberId = default(System.Guid);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaterialTagMaterials")]
	public partial class MaterialTagMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _materialId;
		
		private System.Guid _materialTagId;
		
		private EntityRef<MaterialTag> _MaterialTag;
		
		private EntityRef<Material> _Material;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaterialIdChanging(System.Guid value);
    partial void OnmaterialIdChanged();
    partial void OnmaterialTagIdChanging(System.Guid value);
    partial void OnmaterialTagIdChanged();
    #endregion
		
		public MaterialTagMaterial()
		{
			this._MaterialTag = default(EntityRef<MaterialTag>);
			this._Material = default(EntityRef<Material>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid materialId
		{
			get
			{
				return this._materialId;
			}
			set
			{
				if ((this._materialId != value))
				{
					if (this._Material.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaterialIdChanging(value);
					this.SendPropertyChanging();
					this._materialId = value;
					this.SendPropertyChanged("materialId");
					this.OnmaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialTagId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid materialTagId
		{
			get
			{
				return this._materialTagId;
			}
			set
			{
				if ((this._materialTagId != value))
				{
					if (this._MaterialTag.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaterialTagIdChanging(value);
					this.SendPropertyChanging();
					this._materialTagId = value;
					this.SendPropertyChanged("materialTagId");
					this.OnmaterialTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaterialTag_MaterialTagMaterial", Storage="_MaterialTag", ThisKey="materialTagId", OtherKey="materialTagId", IsForeignKey=true)]
		public MaterialTag MaterialTag
		{
			get
			{
				return this._MaterialTag.Entity;
			}
			set
			{
				MaterialTag previousValue = this._MaterialTag.Entity;
				if (((previousValue != value) 
							|| (this._MaterialTag.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaterialTag.Entity = null;
						previousValue.MaterialTagMaterials.Remove(this);
					}
					this._MaterialTag.Entity = value;
					if ((value != null))
					{
						value.MaterialTagMaterials.Add(this);
						this._materialTagId = value.materialTagId;
					}
					else
					{
						this._materialTagId = default(System.Guid);
					}
					this.SendPropertyChanged("MaterialTag");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_MaterialTagMaterial", Storage="_Material", ThisKey="materialId", OtherKey="materialId", IsForeignKey=true)]
		public Material Material
		{
			get
			{
				return this._Material.Entity;
			}
			set
			{
				Material previousValue = this._Material.Entity;
				if (((previousValue != value) 
							|| (this._Material.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Material.Entity = null;
						previousValue.MaterialTagMaterials.Remove(this);
					}
					this._Material.Entity = value;
					if ((value != null))
					{
						value.MaterialTagMaterials.Add(this);
						this._materialId = value.materialId;
					}
					else
					{
						this._materialId = default(System.Guid);
					}
					this.SendPropertyChanged("Material");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaterialTags")]
	public partial class MaterialTag : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _materialTagId;
		
		private string _name;
		
		private bool _isDeleted;
		
		private EntitySet<MaterialTagMaterial> _MaterialTagMaterials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaterialTagIdChanging(System.Guid value);
    partial void OnmaterialTagIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public MaterialTag()
		{
			this._MaterialTagMaterials = new EntitySet<MaterialTagMaterial>(new Action<MaterialTagMaterial>(this.attach_MaterialTagMaterials), new Action<MaterialTagMaterial>(this.detach_MaterialTagMaterials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialTagId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid materialTagId
		{
			get
			{
				return this._materialTagId;
			}
			set
			{
				if ((this._materialTagId != value))
				{
					this.OnmaterialTagIdChanging(value);
					this.SendPropertyChanging();
					this._materialTagId = value;
					this.SendPropertyChanged("materialTagId");
					this.OnmaterialTagIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaterialTag_MaterialTagMaterial", Storage="_MaterialTagMaterials", ThisKey="materialTagId", OtherKey="materialTagId")]
		public EntitySet<MaterialTagMaterial> MaterialTagMaterials
		{
			get
			{
				return this._MaterialTagMaterials;
			}
			set
			{
				this._MaterialTagMaterials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MaterialTagMaterials(MaterialTagMaterial entity)
		{
			this.SendPropertyChanging();
			entity.MaterialTag = this;
		}
		
		private void detach_MaterialTagMaterials(MaterialTagMaterial entity)
		{
			this.SendPropertyChanging();
			entity.MaterialTag = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberCompanies")]
	public partial class MemberCompany : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _memberId;
		
		private System.Guid _companyId;
		
		private EntityRef<Company> _Company;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmemberIdChanging(System.Guid value);
    partial void OnmemberIdChanged();
    partial void OncompanyIdChanging(System.Guid value);
    partial void OncompanyIdChanged();
    #endregion
		
		public MemberCompany()
		{
			this._Company = default(EntityRef<Company>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid companyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("companyId");
					this.OncompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_MemberCompany", Storage="_Company", ThisKey="companyId", OtherKey="companyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.MemberCompanies.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.MemberCompanies.Add(this);
						this._companyId = value.companyId;
					}
					else
					{
						this._companyId = default(System.Guid);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberCompany", Storage="_Member", ThisKey="memberId", OtherKey="memberId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.MemberCompanies.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.MemberCompanies.Add(this);
						this._memberId = value.memberId;
					}
					else
					{
						this._memberId = default(System.Guid);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberIpAddresses")]
	public partial class MemberIpAddress : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _memberIpAddressId;
		
		private System.Nullable<System.Guid> _memberId;
		
		private string _email;
		
		private string _ipAddress;
		
		private System.Data.Linq.Binary _password;
		
		private System.Data.Linq.Binary _keyValue;
		
		private System.Data.Linq.Binary _iVValue;
		
		private System.DateTimeOffset _createdDate;
		
		private bool _isSuccess;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmemberIpAddressIdChanging(System.Guid value);
    partial void OnmemberIpAddressIdChanged();
    partial void OnmemberIdChanging(System.Nullable<System.Guid> value);
    partial void OnmemberIdChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnipAddressChanging(string value);
    partial void OnipAddressChanged();
    partial void OnpasswordChanging(System.Data.Linq.Binary value);
    partial void OnpasswordChanged();
    partial void OnkeyValueChanging(System.Data.Linq.Binary value);
    partial void OnkeyValueChanged();
    partial void OniVValueChanging(System.Data.Linq.Binary value);
    partial void OniVValueChanged();
    partial void OncreatedDateChanging(System.DateTimeOffset value);
    partial void OncreatedDateChanged();
    partial void OnisSuccessChanging(bool value);
    partial void OnisSuccessChanged();
    #endregion
		
		public MemberIpAddress()
		{
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberIpAddressId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid memberIpAddressId
		{
			get
			{
				return this._memberIpAddressId;
			}
			set
			{
				if ((this._memberIpAddressId != value))
				{
					this.OnmemberIpAddressIdChanging(value);
					this.SendPropertyChanging();
					this._memberIpAddressId = value;
					this.SendPropertyChanged("memberIpAddressId");
					this.OnmemberIpAddressIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberId", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ipAddress", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string ipAddress
		{
			get
			{
				return this._ipAddress;
			}
			set
			{
				if ((this._ipAddress != value))
				{
					this.OnipAddressChanging(value);
					this.SendPropertyChanging();
					this._ipAddress = value;
					this.SendPropertyChanged("ipAddress");
					this.OnipAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keyValue", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary keyValue
		{
			get
			{
				return this._keyValue;
			}
			set
			{
				if ((this._keyValue != value))
				{
					this.OnkeyValueChanging(value);
					this.SendPropertyChanging();
					this._keyValue = value;
					this.SendPropertyChanged("keyValue");
					this.OnkeyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iVValue", DbType="VarBinary(MAX) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary iVValue
		{
			get
			{
				return this._iVValue;
			}
			set
			{
				if ((this._iVValue != value))
				{
					this.OniVValueChanging(value);
					this.SendPropertyChanging();
					this._iVValue = value;
					this.SendPropertyChanged("iVValue");
					this.OniVValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_createdDate", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset createdDate
		{
			get
			{
				return this._createdDate;
			}
			set
			{
				if ((this._createdDate != value))
				{
					this.OncreatedDateChanging(value);
					this.SendPropertyChanging();
					this._createdDate = value;
					this.SendPropertyChanged("createdDate");
					this.OncreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSuccess", DbType="Bit NOT NULL")]
		public bool isSuccess
		{
			get
			{
				return this._isSuccess;
			}
			set
			{
				if ((this._isSuccess != value))
				{
					this.OnisSuccessChanging(value);
					this.SendPropertyChanging();
					this._isSuccess = value;
					this.SendPropertyChanged("isSuccess");
					this.OnisSuccessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberIpAddress", Storage="_Member", ThisKey="memberId", OtherKey="memberId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.MemberIpAddresses.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.MemberIpAddresses.Add(this);
						this._memberId = value.memberId;
					}
					else
					{
						this._memberId = default(Nullable<System.Guid>);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemberRoles")]
	public partial class MemberRole : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _memberId;
		
		private System.Guid _roleId;
		
		private EntityRef<Role> _Role;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmemberIdChanging(System.Guid value);
    partial void OnmemberIdChanged();
    partial void OnroleIdChanging(System.Guid value);
    partial void OnroleIdChanged();
    #endregion
		
		public MemberRole()
		{
			this._Role = default(EntityRef<Role>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid roleId
		{
			get
			{
				return this._roleId;
			}
			set
			{
				if ((this._roleId != value))
				{
					if (this._Role.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnroleIdChanging(value);
					this.SendPropertyChanging();
					this._roleId = value;
					this.SendPropertyChanged("roleId");
					this.OnroleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_MemberRole", Storage="_Role", ThisKey="roleId", OtherKey="roleId", IsForeignKey=true)]
		public Role Role
		{
			get
			{
				return this._Role.Entity;
			}
			set
			{
				Role previousValue = this._Role.Entity;
				if (((previousValue != value) 
							|| (this._Role.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Role.Entity = null;
						previousValue.MemberRoles.Remove(this);
					}
					this._Role.Entity = value;
					if ((value != null))
					{
						value.MemberRoles.Add(this);
						this._roleId = value.roleId;
					}
					else
					{
						this._roleId = default(System.Guid);
					}
					this.SendPropertyChanged("Role");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberRole", Storage="_Member", ThisKey="memberId", OtherKey="memberId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.MemberRoles.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.MemberRoles.Add(this);
						this._memberId = value.memberId;
					}
					else
					{
						this._memberId = default(System.Guid);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectAttractions")]
	public partial class ProjectAttraction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _projectAttractionId;
		
		private System.Guid _projectZoneId;
		
		private string _name;
		
		private string _description;
		
		private int _code;
		
		private System.DateTimeOffset _dateCreated;
		
		private bool _isDeleted;
		
		private EntitySet<ProjectElement> _ProjectElements;
		
		private EntitySet<ProjectWritingDocument> _ProjectWritingDocuments;
		
		private EntityRef<ProjectZone> _ProjectZone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojectAttractionIdChanging(System.Guid value);
    partial void OnprojectAttractionIdChanged();
    partial void OnprojectZoneIdChanging(System.Guid value);
    partial void OnprojectZoneIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OncodeChanging(int value);
    partial void OncodeChanged();
    partial void OndateCreatedChanging(System.DateTimeOffset value);
    partial void OndateCreatedChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public ProjectAttraction()
		{
			this._ProjectElements = new EntitySet<ProjectElement>(new Action<ProjectElement>(this.attach_ProjectElements), new Action<ProjectElement>(this.detach_ProjectElements));
			this._ProjectWritingDocuments = new EntitySet<ProjectWritingDocument>(new Action<ProjectWritingDocument>(this.attach_ProjectWritingDocuments), new Action<ProjectWritingDocument>(this.detach_ProjectWritingDocuments));
			this._ProjectZone = default(EntityRef<ProjectZone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectAttractionId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid projectAttractionId
		{
			get
			{
				return this._projectAttractionId;
			}
			set
			{
				if ((this._projectAttractionId != value))
				{
					this.OnprojectAttractionIdChanging(value);
					this.SendPropertyChanging();
					this._projectAttractionId = value;
					this.SendPropertyChanged("projectAttractionId");
					this.OnprojectAttractionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectZoneId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid projectZoneId
		{
			get
			{
				return this._projectZoneId;
			}
			set
			{
				if ((this._projectZoneId != value))
				{
					if (this._ProjectZone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectZoneIdChanging(value);
					this.SendPropertyChanging();
					this._projectZoneId = value;
					this.SendPropertyChanged("projectZoneId");
					this.OnprojectZoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="Int NOT NULL")]
		public int code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectAttraction_ProjectElement", Storage="_ProjectElements", ThisKey="projectAttractionId", OtherKey="projectAttractionId")]
		public EntitySet<ProjectElement> ProjectElements
		{
			get
			{
				return this._ProjectElements;
			}
			set
			{
				this._ProjectElements.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectAttraction_ProjectWritingDocument", Storage="_ProjectWritingDocuments", ThisKey="projectAttractionId", OtherKey="projectAttractionId")]
		public EntitySet<ProjectWritingDocument> ProjectWritingDocuments
		{
			get
			{
				return this._ProjectWritingDocuments;
			}
			set
			{
				this._ProjectWritingDocuments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectZone_ProjectAttraction", Storage="_ProjectZone", ThisKey="projectZoneId", OtherKey="projectZoneId", IsForeignKey=true)]
		public ProjectZone ProjectZone
		{
			get
			{
				return this._ProjectZone.Entity;
			}
			set
			{
				ProjectZone previousValue = this._ProjectZone.Entity;
				if (((previousValue != value) 
							|| (this._ProjectZone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectZone.Entity = null;
						previousValue.ProjectAttractions.Remove(this);
					}
					this._ProjectZone.Entity = value;
					if ((value != null))
					{
						value.ProjectAttractions.Add(this);
						this._projectZoneId = value.projectZoneId;
					}
					else
					{
						this._projectZoneId = default(System.Guid);
					}
					this.SendPropertyChanged("ProjectZone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectElements(ProjectElement entity)
		{
			this.SendPropertyChanging();
			entity.ProjectAttraction = this;
		}
		
		private void detach_ProjectElements(ProjectElement entity)
		{
			this.SendPropertyChanging();
			entity.ProjectAttraction = null;
		}
		
		private void attach_ProjectWritingDocuments(ProjectWritingDocument entity)
		{
			this.SendPropertyChanging();
			entity.ProjectAttraction = this;
		}
		
		private void detach_ProjectWritingDocuments(ProjectWritingDocument entity)
		{
			this.SendPropertyChanging();
			entity.ProjectAttraction = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectElements")]
	public partial class ProjectElement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _projectElementId;
		
		private System.Guid _projectAttractionId;
		
		private System.Guid _disciplineId;
		
		private string _name;
		
		private string _description;
		
		private int _code;
		
		private int _quantity;
		
		private string _unit;
		
		private string _notes;
		
		private System.DateTimeOffset _dateCreated;
		
		private bool _isDeleted;
		
		private EntityRef<Discipline> _Discipline;
		
		private EntityRef<ProjectAttraction> _ProjectAttraction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojectElementIdChanging(System.Guid value);
    partial void OnprojectElementIdChanged();
    partial void OnprojectAttractionIdChanging(System.Guid value);
    partial void OnprojectAttractionIdChanged();
    partial void OndisciplineIdChanging(System.Guid value);
    partial void OndisciplineIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OncodeChanging(int value);
    partial void OncodeChanged();
    partial void OnquantityChanging(int value);
    partial void OnquantityChanged();
    partial void OnunitChanging(string value);
    partial void OnunitChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void OndateCreatedChanging(System.DateTimeOffset value);
    partial void OndateCreatedChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public ProjectElement()
		{
			this._Discipline = default(EntityRef<Discipline>);
			this._ProjectAttraction = default(EntityRef<ProjectAttraction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectElementId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid projectElementId
		{
			get
			{
				return this._projectElementId;
			}
			set
			{
				if ((this._projectElementId != value))
				{
					this.OnprojectElementIdChanging(value);
					this.SendPropertyChanging();
					this._projectElementId = value;
					this.SendPropertyChanged("projectElementId");
					this.OnprojectElementIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectAttractionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid projectAttractionId
		{
			get
			{
				return this._projectAttractionId;
			}
			set
			{
				if ((this._projectAttractionId != value))
				{
					if (this._ProjectAttraction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectAttractionIdChanging(value);
					this.SendPropertyChanging();
					this._projectAttractionId = value;
					this.SendPropertyChanged("projectAttractionId");
					this.OnprojectAttractionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disciplineId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid disciplineId
		{
			get
			{
				return this._disciplineId;
			}
			set
			{
				if ((this._disciplineId != value))
				{
					if (this._Discipline.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndisciplineIdChanging(value);
					this.SendPropertyChanging();
					this._disciplineId = value;
					this.SendPropertyChanged("disciplineId");
					this.OndisciplineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="Int NOT NULL")]
		public int code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int NOT NULL")]
		public int quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unit", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string unit
		{
			get
			{
				return this._unit;
			}
			set
			{
				if ((this._unit != value))
				{
					this.OnunitChanging(value);
					this.SendPropertyChanging();
					this._unit = value;
					this.SendPropertyChanged("unit");
					this.OnunitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discipline_ProjectElement", Storage="_Discipline", ThisKey="disciplineId", OtherKey="disciplineId", IsForeignKey=true)]
		public Discipline Discipline
		{
			get
			{
				return this._Discipline.Entity;
			}
			set
			{
				Discipline previousValue = this._Discipline.Entity;
				if (((previousValue != value) 
							|| (this._Discipline.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discipline.Entity = null;
						previousValue.ProjectElements.Remove(this);
					}
					this._Discipline.Entity = value;
					if ((value != null))
					{
						value.ProjectElements.Add(this);
						this._disciplineId = value.disciplineId;
					}
					else
					{
						this._disciplineId = default(System.Guid);
					}
					this.SendPropertyChanged("Discipline");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectAttraction_ProjectElement", Storage="_ProjectAttraction", ThisKey="projectAttractionId", OtherKey="projectAttractionId", IsForeignKey=true)]
		public ProjectAttraction ProjectAttraction
		{
			get
			{
				return this._ProjectAttraction.Entity;
			}
			set
			{
				ProjectAttraction previousValue = this._ProjectAttraction.Entity;
				if (((previousValue != value) 
							|| (this._ProjectAttraction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectAttraction.Entity = null;
						previousValue.ProjectElements.Remove(this);
					}
					this._ProjectAttraction.Entity = value;
					if ((value != null))
					{
						value.ProjectElements.Add(this);
						this._projectAttractionId = value.projectAttractionId;
					}
					else
					{
						this._projectAttractionId = default(System.Guid);
					}
					this.SendPropertyChanged("ProjectAttraction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectMembers")]
	public partial class ProjectMember : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _projectId;
		
		private System.Guid _memberId;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojectIdChanging(System.Guid value);
    partial void OnprojectIdChanged();
    partial void OnmemberIdChanging(System.Guid value);
    partial void OnmemberIdChanged();
    #endregion
		
		public ProjectMember()
		{
			this._Project = default(EntityRef<Project>);
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid projectId
		{
			get
			{
				return this._projectId;
			}
			set
			{
				if ((this._projectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectIdChanging(value);
					this.SendPropertyChanging();
					this._projectId = value;
					this.SendPropertyChanged("projectId");
					this.OnprojectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true)]
		public System.Guid memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectMember", Storage="_Project", ThisKey="projectId", OtherKey="projectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectMembers.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectMembers.Add(this);
						this._projectId = value.projectId;
					}
					else
					{
						this._projectId = default(System.Guid);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_ProjectMember", Storage="_Member", ThisKey="memberId", OtherKey="memberId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.ProjectMembers.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.ProjectMembers.Add(this);
						this._memberId = value.memberId;
					}
					else
					{
						this._memberId = default(System.Guid);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectPhases")]
	public partial class ProjectPhase : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _projectPhaseId;
		
		private System.Guid _projectId;
		
		private string _name;
		
		private string _description;
		
		private int _sortOrder;
		
		private System.DateTimeOffset _dateStart;
		
		private System.DateTimeOffset _dateEnd;
		
		private bool _isDeleted;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojectPhaseIdChanging(System.Guid value);
    partial void OnprojectPhaseIdChanged();
    partial void OnprojectIdChanging(System.Guid value);
    partial void OnprojectIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnsortOrderChanging(int value);
    partial void OnsortOrderChanged();
    partial void OndateStartChanging(System.DateTimeOffset value);
    partial void OndateStartChanged();
    partial void OndateEndChanging(System.DateTimeOffset value);
    partial void OndateEndChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public ProjectPhase()
		{
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectPhaseId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid projectPhaseId
		{
			get
			{
				return this._projectPhaseId;
			}
			set
			{
				if ((this._projectPhaseId != value))
				{
					this.OnprojectPhaseIdChanging(value);
					this.SendPropertyChanging();
					this._projectPhaseId = value;
					this.SendPropertyChanged("projectPhaseId");
					this.OnprojectPhaseIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid projectId
		{
			get
			{
				return this._projectId;
			}
			set
			{
				if ((this._projectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectIdChanging(value);
					this.SendPropertyChanging();
					this._projectId = value;
					this.SendPropertyChanged("projectId");
					this.OnprojectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sortOrder", DbType="Int NOT NULL")]
		public int sortOrder
		{
			get
			{
				return this._sortOrder;
			}
			set
			{
				if ((this._sortOrder != value))
				{
					this.OnsortOrderChanging(value);
					this.SendPropertyChanging();
					this._sortOrder = value;
					this.SendPropertyChanged("sortOrder");
					this.OnsortOrderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateStart", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateStart
		{
			get
			{
				return this._dateStart;
			}
			set
			{
				if ((this._dateStart != value))
				{
					this.OndateStartChanging(value);
					this.SendPropertyChanging();
					this._dateStart = value;
					this.SendPropertyChanged("dateStart");
					this.OndateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateEnd", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateEnd
		{
			get
			{
				return this._dateEnd;
			}
			set
			{
				if ((this._dateEnd != value))
				{
					this.OndateEndChanging(value);
					this.SendPropertyChanging();
					this._dateEnd = value;
					this.SendPropertyChanged("dateEnd");
					this.OndateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectPhase", Storage="_Project", ThisKey="projectId", OtherKey="projectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectPhases.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectPhases.Add(this);
						this._projectId = value.projectId;
					}
					else
					{
						this._projectId = default(System.Guid);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Projects")]
	public partial class Project : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _projectId;
		
		private System.Guid _companyId;
		
		private string _code;
		
		private string _name;
		
		private string _addressLine1;
		
		private string _addressLine2;
		
		private string _city;
		
		private string _state;
		
		private string _zip;
		
		private string _country;
		
		private string _scale;
		
		private bool _isDefault;
		
		private bool _isDeleted;
		
		private EntitySet<ProjectMember> _ProjectMembers;
		
		private EntitySet<ProjectPhase> _ProjectPhases;
		
		private EntitySet<ProjectZone> _ProjectZones;
		
		private EntitySet<TimeTrackerProject> _TimeTrackerProjects;
		
		private EntitySet<Tsk> _Tsks;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojectIdChanging(System.Guid value);
    partial void OnprojectIdChanged();
    partial void OncompanyIdChanging(System.Guid value);
    partial void OncompanyIdChanged();
    partial void OncodeChanging(string value);
    partial void OncodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnaddressLine1Changing(string value);
    partial void OnaddressLine1Changed();
    partial void OnaddressLine2Changing(string value);
    partial void OnaddressLine2Changed();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OnzipChanging(string value);
    partial void OnzipChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnscaleChanging(string value);
    partial void OnscaleChanged();
    partial void OnisDefaultChanging(bool value);
    partial void OnisDefaultChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public Project()
		{
			this._ProjectMembers = new EntitySet<ProjectMember>(new Action<ProjectMember>(this.attach_ProjectMembers), new Action<ProjectMember>(this.detach_ProjectMembers));
			this._ProjectPhases = new EntitySet<ProjectPhase>(new Action<ProjectPhase>(this.attach_ProjectPhases), new Action<ProjectPhase>(this.detach_ProjectPhases));
			this._ProjectZones = new EntitySet<ProjectZone>(new Action<ProjectZone>(this.attach_ProjectZones), new Action<ProjectZone>(this.detach_ProjectZones));
			this._TimeTrackerProjects = new EntitySet<TimeTrackerProject>(new Action<TimeTrackerProject>(this.attach_TimeTrackerProjects), new Action<TimeTrackerProject>(this.detach_TimeTrackerProjects));
			this._Tsks = new EntitySet<Tsk>(new Action<Tsk>(this.attach_Tsks), new Action<Tsk>(this.detach_Tsks));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid projectId
		{
			get
			{
				return this._projectId;
			}
			set
			{
				if ((this._projectId != value))
				{
					this.OnprojectIdChanging(value);
					this.SendPropertyChanging();
					this._projectId = value;
					this.SendPropertyChanged("projectId");
					this.OnprojectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_companyId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid companyId
		{
			get
			{
				return this._companyId;
			}
			set
			{
				if ((this._companyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncompanyIdChanging(value);
					this.SendPropertyChanging();
					this._companyId = value;
					this.SendPropertyChanged("companyId");
					this.OncompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressLine1", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string addressLine1
		{
			get
			{
				return this._addressLine1;
			}
			set
			{
				if ((this._addressLine1 != value))
				{
					this.OnaddressLine1Changing(value);
					this.SendPropertyChanging();
					this._addressLine1 = value;
					this.SendPropertyChanged("addressLine1");
					this.OnaddressLine1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_addressLine2", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string addressLine2
		{
			get
			{
				return this._addressLine2;
			}
			set
			{
				if ((this._addressLine2 != value))
				{
					this.OnaddressLine2Changing(value);
					this.SendPropertyChanging();
					this._addressLine2 = value;
					this.SendPropertyChanged("addressLine2");
					this.OnaddressLine2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_zip", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string zip
		{
			get
			{
				return this._zip;
			}
			set
			{
				if ((this._zip != value))
				{
					this.OnzipChanging(value);
					this.SendPropertyChanging();
					this._zip = value;
					this.SendPropertyChanged("zip");
					this.OnzipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scale", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string scale
		{
			get
			{
				return this._scale;
			}
			set
			{
				if ((this._scale != value))
				{
					this.OnscaleChanging(value);
					this.SendPropertyChanging();
					this._scale = value;
					this.SendPropertyChanged("scale");
					this.OnscaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDefault", DbType="Bit NOT NULL")]
		public bool isDefault
		{
			get
			{
				return this._isDefault;
			}
			set
			{
				if ((this._isDefault != value))
				{
					this.OnisDefaultChanging(value);
					this.SendPropertyChanging();
					this._isDefault = value;
					this.SendPropertyChanged("isDefault");
					this.OnisDefaultChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectMember", Storage="_ProjectMembers", ThisKey="projectId", OtherKey="projectId")]
		public EntitySet<ProjectMember> ProjectMembers
		{
			get
			{
				return this._ProjectMembers;
			}
			set
			{
				this._ProjectMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectPhase", Storage="_ProjectPhases", ThisKey="projectId", OtherKey="projectId")]
		public EntitySet<ProjectPhase> ProjectPhases
		{
			get
			{
				return this._ProjectPhases;
			}
			set
			{
				this._ProjectPhases.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectZone", Storage="_ProjectZones", ThisKey="projectId", OtherKey="projectId")]
		public EntitySet<ProjectZone> ProjectZones
		{
			get
			{
				return this._ProjectZones;
			}
			set
			{
				this._ProjectZones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_TimeTrackerProject", Storage="_TimeTrackerProjects", ThisKey="projectId", OtherKey="projectId")]
		public EntitySet<TimeTrackerProject> TimeTrackerProjects
		{
			get
			{
				return this._TimeTrackerProjects;
			}
			set
			{
				this._TimeTrackerProjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Tsk", Storage="_Tsks", ThisKey="projectId", OtherKey="projectId")]
		public EntitySet<Tsk> Tsks
		{
			get
			{
				return this._Tsks;
			}
			set
			{
				this._Tsks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Project", Storage="_Company", ThisKey="companyId", OtherKey="companyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Projects.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Projects.Add(this);
						this._companyId = value.companyId;
					}
					else
					{
						this._companyId = default(System.Guid);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectMembers(ProjectMember entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectMembers(ProjectMember entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProjectPhases(ProjectPhase entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectPhases(ProjectPhase entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_ProjectZones(ProjectZone entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_ProjectZones(ProjectZone entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_TimeTrackerProjects(TimeTrackerProject entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_TimeTrackerProjects(TimeTrackerProject entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
		
		private void attach_Tsks(Tsk entity)
		{
			this.SendPropertyChanging();
			entity.Project = this;
		}
		
		private void detach_Tsks(Tsk entity)
		{
			this.SendPropertyChanging();
			entity.Project = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectWritingDocuments")]
	public partial class ProjectWritingDocument : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _projectWritingDocumentId;
		
		private System.Guid _projectAttractionId;
		
		private string _name;
		
		private string _description;
		
		private int _code;
		
		private System.DateTimeOffset _dateCreated;
		
		private bool _isDeleted;
		
		private EntityRef<ProjectAttraction> _ProjectAttraction;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojectWritingDocumentIdChanging(System.Guid value);
    partial void OnprojectWritingDocumentIdChanged();
    partial void OnprojectAttractionIdChanging(System.Guid value);
    partial void OnprojectAttractionIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OncodeChanging(int value);
    partial void OncodeChanged();
    partial void OndateCreatedChanging(System.DateTimeOffset value);
    partial void OndateCreatedChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public ProjectWritingDocument()
		{
			this._ProjectAttraction = default(EntityRef<ProjectAttraction>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectWritingDocumentId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid projectWritingDocumentId
		{
			get
			{
				return this._projectWritingDocumentId;
			}
			set
			{
				if ((this._projectWritingDocumentId != value))
				{
					this.OnprojectWritingDocumentIdChanging(value);
					this.SendPropertyChanging();
					this._projectWritingDocumentId = value;
					this.SendPropertyChanged("projectWritingDocumentId");
					this.OnprojectWritingDocumentIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectAttractionId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid projectAttractionId
		{
			get
			{
				return this._projectAttractionId;
			}
			set
			{
				if ((this._projectAttractionId != value))
				{
					if (this._ProjectAttraction.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectAttractionIdChanging(value);
					this.SendPropertyChanging();
					this._projectAttractionId = value;
					this.SendPropertyChanged("projectAttractionId");
					this.OnprojectAttractionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="Int NOT NULL")]
		public int code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectAttraction_ProjectWritingDocument", Storage="_ProjectAttraction", ThisKey="projectAttractionId", OtherKey="projectAttractionId", IsForeignKey=true)]
		public ProjectAttraction ProjectAttraction
		{
			get
			{
				return this._ProjectAttraction.Entity;
			}
			set
			{
				ProjectAttraction previousValue = this._ProjectAttraction.Entity;
				if (((previousValue != value) 
							|| (this._ProjectAttraction.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectAttraction.Entity = null;
						previousValue.ProjectWritingDocuments.Remove(this);
					}
					this._ProjectAttraction.Entity = value;
					if ((value != null))
					{
						value.ProjectWritingDocuments.Add(this);
						this._projectAttractionId = value.projectAttractionId;
					}
					else
					{
						this._projectAttractionId = default(System.Guid);
					}
					this.SendPropertyChanged("ProjectAttraction");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectZoneArchives")]
	public partial class ProjectZoneArchive : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _projectZoneArchiveKey;
		
		private System.Guid _projectZoneId;
		
		private System.DateTimeOffset _dateStart;
		
		private System.DateTimeOffset _dateEnd;
		
		private System.Guid _memberStartId;
		
		private System.Guid _memberEndId;
		
		private EntityRef<ProjectZone> _ProjectZone;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Member> _Member1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojectZoneArchiveKeyChanging(long value);
    partial void OnprojectZoneArchiveKeyChanged();
    partial void OnprojectZoneIdChanging(System.Guid value);
    partial void OnprojectZoneIdChanged();
    partial void OndateStartChanging(System.DateTimeOffset value);
    partial void OndateStartChanged();
    partial void OndateEndChanging(System.DateTimeOffset value);
    partial void OndateEndChanged();
    partial void OnmemberStartIdChanging(System.Guid value);
    partial void OnmemberStartIdChanged();
    partial void OnmemberEndIdChanging(System.Guid value);
    partial void OnmemberEndIdChanged();
    #endregion
		
		public ProjectZoneArchive()
		{
			this._ProjectZone = default(EntityRef<ProjectZone>);
			this._Member = default(EntityRef<Member>);
			this._Member1 = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectZoneArchiveKey", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long projectZoneArchiveKey
		{
			get
			{
				return this._projectZoneArchiveKey;
			}
			set
			{
				if ((this._projectZoneArchiveKey != value))
				{
					this.OnprojectZoneArchiveKeyChanging(value);
					this.SendPropertyChanging();
					this._projectZoneArchiveKey = value;
					this.SendPropertyChanged("projectZoneArchiveKey");
					this.OnprojectZoneArchiveKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectZoneId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid projectZoneId
		{
			get
			{
				return this._projectZoneId;
			}
			set
			{
				if ((this._projectZoneId != value))
				{
					if (this._ProjectZone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectZoneIdChanging(value);
					this.SendPropertyChanging();
					this._projectZoneId = value;
					this.SendPropertyChanged("projectZoneId");
					this.OnprojectZoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateStart", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateStart
		{
			get
			{
				return this._dateStart;
			}
			set
			{
				if ((this._dateStart != value))
				{
					this.OndateStartChanging(value);
					this.SendPropertyChanging();
					this._dateStart = value;
					this.SendPropertyChanged("dateStart");
					this.OndateStartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateEnd", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateEnd
		{
			get
			{
				return this._dateEnd;
			}
			set
			{
				if ((this._dateEnd != value))
				{
					this.OndateEndChanging(value);
					this.SendPropertyChanging();
					this._dateEnd = value;
					this.SendPropertyChanged("dateEnd");
					this.OndateEndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberStartId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid memberStartId
		{
			get
			{
				return this._memberStartId;
			}
			set
			{
				if ((this._memberStartId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmemberStartIdChanging(value);
					this.SendPropertyChanging();
					this._memberStartId = value;
					this.SendPropertyChanged("memberStartId");
					this.OnmemberStartIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberEndId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid memberEndId
		{
			get
			{
				return this._memberEndId;
			}
			set
			{
				if ((this._memberEndId != value))
				{
					if (this._Member1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmemberEndIdChanging(value);
					this.SendPropertyChanging();
					this._memberEndId = value;
					this.SendPropertyChanged("memberEndId");
					this.OnmemberEndIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectZone_ProjectZoneArchive", Storage="_ProjectZone", ThisKey="projectZoneId", OtherKey="projectZoneId", IsForeignKey=true)]
		public ProjectZone ProjectZone
		{
			get
			{
				return this._ProjectZone.Entity;
			}
			set
			{
				ProjectZone previousValue = this._ProjectZone.Entity;
				if (((previousValue != value) 
							|| (this._ProjectZone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProjectZone.Entity = null;
						previousValue.ProjectZoneArchives.Remove(this);
					}
					this._ProjectZone.Entity = value;
					if ((value != null))
					{
						value.ProjectZoneArchives.Add(this);
						this._projectZoneId = value.projectZoneId;
					}
					else
					{
						this._projectZoneId = default(System.Guid);
					}
					this.SendPropertyChanged("ProjectZone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_ProjectZoneArchive", Storage="_Member", ThisKey="memberStartId", OtherKey="memberId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.ProjectZoneArchives.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.ProjectZoneArchives.Add(this);
						this._memberStartId = value.memberId;
					}
					else
					{
						this._memberStartId = default(System.Guid);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_ProjectZoneArchive1", Storage="_Member1", ThisKey="memberEndId", OtherKey="memberId", IsForeignKey=true)]
		public Member Member1
		{
			get
			{
				return this._Member1.Entity;
			}
			set
			{
				Member previousValue = this._Member1.Entity;
				if (((previousValue != value) 
							|| (this._Member1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member1.Entity = null;
						previousValue.ProjectZoneArchives1.Remove(this);
					}
					this._Member1.Entity = value;
					if ((value != null))
					{
						value.ProjectZoneArchives1.Add(this);
						this._memberEndId = value.memberId;
					}
					else
					{
						this._memberEndId = default(System.Guid);
					}
					this.SendPropertyChanged("Member1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProjectZones")]
	public partial class ProjectZone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _projectZoneId;
		
		private System.Guid _projectId;
		
		private string _name;
		
		private string _description;
		
		private int _code;
		
		private System.DateTimeOffset _dateCreated;
		
		private bool _isArchived;
		
		private bool _isDeleted;
		
		private EntitySet<ProjectAttraction> _ProjectAttractions;
		
		private EntitySet<ProjectZoneArchive> _ProjectZoneArchives;
		
		private EntityRef<Project> _Project;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprojectZoneIdChanging(System.Guid value);
    partial void OnprojectZoneIdChanged();
    partial void OnprojectIdChanging(System.Guid value);
    partial void OnprojectIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OncodeChanging(int value);
    partial void OncodeChanged();
    partial void OndateCreatedChanging(System.DateTimeOffset value);
    partial void OndateCreatedChanged();
    partial void OnisArchivedChanging(bool value);
    partial void OnisArchivedChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public ProjectZone()
		{
			this._ProjectAttractions = new EntitySet<ProjectAttraction>(new Action<ProjectAttraction>(this.attach_ProjectAttractions), new Action<ProjectAttraction>(this.detach_ProjectAttractions));
			this._ProjectZoneArchives = new EntitySet<ProjectZoneArchive>(new Action<ProjectZoneArchive>(this.attach_ProjectZoneArchives), new Action<ProjectZoneArchive>(this.detach_ProjectZoneArchives));
			this._Project = default(EntityRef<Project>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectZoneId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid projectZoneId
		{
			get
			{
				return this._projectZoneId;
			}
			set
			{
				if ((this._projectZoneId != value))
				{
					this.OnprojectZoneIdChanging(value);
					this.SendPropertyChanging();
					this._projectZoneId = value;
					this.SendPropertyChanged("projectZoneId");
					this.OnprojectZoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid projectId
		{
			get
			{
				return this._projectId;
			}
			set
			{
				if ((this._projectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectIdChanging(value);
					this.SendPropertyChanging();
					this._projectId = value;
					this.SendPropertyChanged("projectId");
					this.OnprojectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_code", DbType="Int NOT NULL")]
		public int code
		{
			get
			{
				return this._code;
			}
			set
			{
				if ((this._code != value))
				{
					this.OncodeChanging(value);
					this.SendPropertyChanging();
					this._code = value;
					this.SendPropertyChanged("code");
					this.OncodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isArchived", DbType="Bit NOT NULL")]
		public bool isArchived
		{
			get
			{
				return this._isArchived;
			}
			set
			{
				if ((this._isArchived != value))
				{
					this.OnisArchivedChanging(value);
					this.SendPropertyChanging();
					this._isArchived = value;
					this.SendPropertyChanged("isArchived");
					this.OnisArchivedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectZone_ProjectAttraction", Storage="_ProjectAttractions", ThisKey="projectZoneId", OtherKey="projectZoneId")]
		public EntitySet<ProjectAttraction> ProjectAttractions
		{
			get
			{
				return this._ProjectAttractions;
			}
			set
			{
				this._ProjectAttractions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProjectZone_ProjectZoneArchive", Storage="_ProjectZoneArchives", ThisKey="projectZoneId", OtherKey="projectZoneId")]
		public EntitySet<ProjectZoneArchive> ProjectZoneArchives
		{
			get
			{
				return this._ProjectZoneArchives;
			}
			set
			{
				this._ProjectZoneArchives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_ProjectZone", Storage="_Project", ThisKey="projectId", OtherKey="projectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.ProjectZones.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.ProjectZones.Add(this);
						this._projectId = value.projectId;
					}
					else
					{
						this._projectId = default(System.Guid);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProjectAttractions(ProjectAttraction entity)
		{
			this.SendPropertyChanging();
			entity.ProjectZone = this;
		}
		
		private void detach_ProjectAttractions(ProjectAttraction entity)
		{
			this.SendPropertyChanging();
			entity.ProjectZone = null;
		}
		
		private void attach_ProjectZoneArchives(ProjectZoneArchive entity)
		{
			this.SendPropertyChanging();
			entity.ProjectZone = this;
		}
		
		private void detach_ProjectZoneArchives(ProjectZoneArchive entity)
		{
			this.SendPropertyChanging();
			entity.ProjectZone = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Reports")]
	public partial class Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _reportId;
		
		private int _projectCount;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnreportIdChanging(System.Guid value);
    partial void OnreportIdChanged();
    partial void OnprojectCountChanging(int value);
    partial void OnprojectCountChanged();
    #endregion
		
		public Report()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_reportId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid reportId
		{
			get
			{
				return this._reportId;
			}
			set
			{
				if ((this._reportId != value))
				{
					this.OnreportIdChanging(value);
					this.SendPropertyChanging();
					this._reportId = value;
					this.SendPropertyChanged("reportId");
					this.OnreportIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectCount", DbType="Int NOT NULL")]
		public int projectCount
		{
			get
			{
				return this._projectCount;
			}
			set
			{
				if ((this._projectCount != value))
				{
					this.OnprojectCountChanging(value);
					this.SendPropertyChanging();
					this._projectCount = value;
					this.SendPropertyChanged("projectCount");
					this.OnprojectCountChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Role : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _roleId;
		
		private string _name;
		
		private bool _isContractor;
		
		private bool _isEmployee;
		
		private bool _isManager;
		
		private bool _isAdmin;
		
		private bool _isSuperAdmin;
		
		private EntitySet<MemberRole> _MemberRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnroleIdChanging(System.Guid value);
    partial void OnroleIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnisContractorChanging(bool value);
    partial void OnisContractorChanged();
    partial void OnisEmployeeChanging(bool value);
    partial void OnisEmployeeChanged();
    partial void OnisManagerChanging(bool value);
    partial void OnisManagerChanged();
    partial void OnisAdminChanging(bool value);
    partial void OnisAdminChanged();
    partial void OnisSuperAdminChanging(bool value);
    partial void OnisSuperAdminChanged();
    #endregion
		
		public Role()
		{
			this._MemberRoles = new EntitySet<MemberRole>(new Action<MemberRole>(this.attach_MemberRoles), new Action<MemberRole>(this.detach_MemberRoles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_roleId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid roleId
		{
			get
			{
				return this._roleId;
			}
			set
			{
				if ((this._roleId != value))
				{
					this.OnroleIdChanging(value);
					this.SendPropertyChanging();
					this._roleId = value;
					this.SendPropertyChanged("roleId");
					this.OnroleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isContractor", DbType="Bit NOT NULL")]
		public bool isContractor
		{
			get
			{
				return this._isContractor;
			}
			set
			{
				if ((this._isContractor != value))
				{
					this.OnisContractorChanging(value);
					this.SendPropertyChanging();
					this._isContractor = value;
					this.SendPropertyChanged("isContractor");
					this.OnisContractorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isEmployee", DbType="Bit NOT NULL")]
		public bool isEmployee
		{
			get
			{
				return this._isEmployee;
			}
			set
			{
				if ((this._isEmployee != value))
				{
					this.OnisEmployeeChanging(value);
					this.SendPropertyChanging();
					this._isEmployee = value;
					this.SendPropertyChanged("isEmployee");
					this.OnisEmployeeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isManager", DbType="Bit NOT NULL")]
		public bool isManager
		{
			get
			{
				return this._isManager;
			}
			set
			{
				if ((this._isManager != value))
				{
					this.OnisManagerChanging(value);
					this.SendPropertyChanging();
					this._isManager = value;
					this.SendPropertyChanged("isManager");
					this.OnisManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isAdmin", DbType="Bit NOT NULL")]
		public bool isAdmin
		{
			get
			{
				return this._isAdmin;
			}
			set
			{
				if ((this._isAdmin != value))
				{
					this.OnisAdminChanging(value);
					this.SendPropertyChanging();
					this._isAdmin = value;
					this.SendPropertyChanged("isAdmin");
					this.OnisAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isSuperAdmin", DbType="Bit NOT NULL")]
		public bool isSuperAdmin
		{
			get
			{
				return this._isSuperAdmin;
			}
			set
			{
				if ((this._isSuperAdmin != value))
				{
					this.OnisSuperAdminChanging(value);
					this.SendPropertyChanging();
					this._isSuperAdmin = value;
					this.SendPropertyChanged("isSuperAdmin");
					this.OnisSuperAdminChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Role_MemberRole", Storage="_MemberRoles", ThisKey="roleId", OtherKey="roleId")]
		public EntitySet<MemberRole> MemberRoles
		{
			get
			{
				return this._MemberRoles;
			}
			set
			{
				this._MemberRoles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MemberRoles(MemberRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = this;
		}
		
		private void detach_MemberRoles(MemberRole entity)
		{
			this.SendPropertyChanging();
			entity.Role = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SubTsks")]
	public partial class SubTsk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _subTskId;
		
		private System.Guid _memberId;
		
		private System.Guid _memberIdCreated;
		
		private string _name;
		
		private string _description;
		
		private System.DateTimeOffset _dateDue;
		
		private System.DateTimeOffset _dateOriginalDue;
		
		private System.DateTimeOffset _dateCompleted;
		
		private System.DateTimeOffset _dateCreated;
		
		private bool _isCompleted;
		
		private bool _isDeleted;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Member> _Member1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsubTskIdChanging(System.Guid value);
    partial void OnsubTskIdChanged();
    partial void OnmemberIdChanging(System.Guid value);
    partial void OnmemberIdChanged();
    partial void OnmemberIdCreatedChanging(System.Guid value);
    partial void OnmemberIdCreatedChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OndateDueChanging(System.DateTimeOffset value);
    partial void OndateDueChanged();
    partial void OndateOriginalDueChanging(System.DateTimeOffset value);
    partial void OndateOriginalDueChanged();
    partial void OndateCompletedChanging(System.DateTimeOffset value);
    partial void OndateCompletedChanged();
    partial void OndateCreatedChanging(System.DateTimeOffset value);
    partial void OndateCreatedChanged();
    partial void OnisCompletedChanging(bool value);
    partial void OnisCompletedChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public SubTsk()
		{
			this._Member = default(EntityRef<Member>);
			this._Member1 = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_subTskId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid subTskId
		{
			get
			{
				return this._subTskId;
			}
			set
			{
				if ((this._subTskId != value))
				{
					this.OnsubTskIdChanging(value);
					this.SendPropertyChanging();
					this._subTskId = value;
					this.SendPropertyChanged("subTskId");
					this.OnsubTskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberIdCreated", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid memberIdCreated
		{
			get
			{
				return this._memberIdCreated;
			}
			set
			{
				if ((this._memberIdCreated != value))
				{
					if (this._Member1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmemberIdCreatedChanging(value);
					this.SendPropertyChanging();
					this._memberIdCreated = value;
					this.SendPropertyChanged("memberIdCreated");
					this.OnmemberIdCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateDue", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateDue
		{
			get
			{
				return this._dateDue;
			}
			set
			{
				if ((this._dateDue != value))
				{
					this.OndateDueChanging(value);
					this.SendPropertyChanging();
					this._dateDue = value;
					this.SendPropertyChanged("dateDue");
					this.OndateDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateOriginalDue", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateOriginalDue
		{
			get
			{
				return this._dateOriginalDue;
			}
			set
			{
				if ((this._dateOriginalDue != value))
				{
					this.OndateOriginalDueChanging(value);
					this.SendPropertyChanging();
					this._dateOriginalDue = value;
					this.SendPropertyChanged("dateOriginalDue");
					this.OndateOriginalDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCompleted", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateCompleted
		{
			get
			{
				return this._dateCompleted;
			}
			set
			{
				if ((this._dateCompleted != value))
				{
					this.OndateCompletedChanging(value);
					this.SendPropertyChanging();
					this._dateCompleted = value;
					this.SendPropertyChanged("dateCompleted");
					this.OndateCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isCompleted", DbType="Bit NOT NULL")]
		public bool isCompleted
		{
			get
			{
				return this._isCompleted;
			}
			set
			{
				if ((this._isCompleted != value))
				{
					this.OnisCompletedChanging(value);
					this.SendPropertyChanging();
					this._isCompleted = value;
					this.SendPropertyChanged("isCompleted");
					this.OnisCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_SubTsk", Storage="_Member", ThisKey="memberId", OtherKey="memberId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.SubTsks.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.SubTsks.Add(this);
						this._memberId = value.memberId;
					}
					else
					{
						this._memberId = default(System.Guid);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_SubTsk1", Storage="_Member1", ThisKey="memberIdCreated", OtherKey="memberId", IsForeignKey=true)]
		public Member Member1
		{
			get
			{
				return this._Member1.Entity;
			}
			set
			{
				Member previousValue = this._Member1.Entity;
				if (((previousValue != value) 
							|| (this._Member1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member1.Entity = null;
						previousValue.SubTsks1.Remove(this);
					}
					this._Member1.Entity = value;
					if ((value != null))
					{
						value.SubTsks1.Add(this);
						this._memberIdCreated = value.memberId;
					}
					else
					{
						this._memberIdCreated = default(System.Guid);
					}
					this.SendPropertyChanged("Member1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeTrackerProjects")]
	public partial class TimeTrackerProject : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _timeTrackerProjectId;
		
		private System.Guid _timeTrackerId;
		
		private System.Guid _projectId;
		
		private string _description;
		
		private decimal _totalHours;
		
		private bool _isDeleted;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<TimeTracker> _TimeTracker;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimeTrackerProjectIdChanging(System.Guid value);
    partial void OntimeTrackerProjectIdChanged();
    partial void OntimeTrackerIdChanging(System.Guid value);
    partial void OntimeTrackerIdChanged();
    partial void OnprojectIdChanging(System.Guid value);
    partial void OnprojectIdChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OntotalHoursChanging(decimal value);
    partial void OntotalHoursChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public TimeTrackerProject()
		{
			this._Project = default(EntityRef<Project>);
			this._TimeTracker = default(EntityRef<TimeTracker>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeTrackerProjectId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid timeTrackerProjectId
		{
			get
			{
				return this._timeTrackerProjectId;
			}
			set
			{
				if ((this._timeTrackerProjectId != value))
				{
					this.OntimeTrackerProjectIdChanging(value);
					this.SendPropertyChanging();
					this._timeTrackerProjectId = value;
					this.SendPropertyChanged("timeTrackerProjectId");
					this.OntimeTrackerProjectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeTrackerId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid timeTrackerId
		{
			get
			{
				return this._timeTrackerId;
			}
			set
			{
				if ((this._timeTrackerId != value))
				{
					if (this._TimeTracker.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OntimeTrackerIdChanging(value);
					this.SendPropertyChanging();
					this._timeTrackerId = value;
					this.SendPropertyChanged("timeTrackerId");
					this.OntimeTrackerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid projectId
		{
			get
			{
				return this._projectId;
			}
			set
			{
				if ((this._projectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectIdChanging(value);
					this.SendPropertyChanging();
					this._projectId = value;
					this.SendPropertyChanged("projectId");
					this.OnprojectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalHours", DbType="Decimal(18,4) NOT NULL")]
		public decimal totalHours
		{
			get
			{
				return this._totalHours;
			}
			set
			{
				if ((this._totalHours != value))
				{
					this.OntotalHoursChanging(value);
					this.SendPropertyChanging();
					this._totalHours = value;
					this.SendPropertyChanged("totalHours");
					this.OntotalHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_TimeTrackerProject", Storage="_Project", ThisKey="projectId", OtherKey="projectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.TimeTrackerProjects.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.TimeTrackerProjects.Add(this);
						this._projectId = value.projectId;
					}
					else
					{
						this._projectId = default(System.Guid);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeTracker_TimeTrackerProject", Storage="_TimeTracker", ThisKey="timeTrackerId", OtherKey="timeTrackerId", IsForeignKey=true)]
		public TimeTracker TimeTracker
		{
			get
			{
				return this._TimeTracker.Entity;
			}
			set
			{
				TimeTracker previousValue = this._TimeTracker.Entity;
				if (((previousValue != value) 
							|| (this._TimeTracker.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TimeTracker.Entity = null;
						previousValue.TimeTrackerProjects.Remove(this);
					}
					this._TimeTracker.Entity = value;
					if ((value != null))
					{
						value.TimeTrackerProjects.Add(this);
						this._timeTrackerId = value.timeTrackerId;
					}
					else
					{
						this._timeTrackerId = default(System.Guid);
					}
					this.SendPropertyChanged("TimeTracker");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TimeTrackers")]
	public partial class TimeTracker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _timeTrackerId;
		
		private System.Guid _memberId;
		
		private System.DateTimeOffset _dateCreated;
		
		private System.DateTimeOffset _dateIn;
		
		private System.DateTimeOffset _dateOut;
		
		private decimal _totalHours;
		
		private bool _isActive;
		
		private bool _isDeleted;
		
		private EntitySet<TimeTrackerProject> _TimeTrackerProjects;
		
		private EntityRef<Member> _Member;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntimeTrackerIdChanging(System.Guid value);
    partial void OntimeTrackerIdChanged();
    partial void OnmemberIdChanging(System.Guid value);
    partial void OnmemberIdChanged();
    partial void OndateCreatedChanging(System.DateTimeOffset value);
    partial void OndateCreatedChanged();
    partial void OndateInChanging(System.DateTimeOffset value);
    partial void OndateInChanged();
    partial void OndateOutChanging(System.DateTimeOffset value);
    partial void OndateOutChanged();
    partial void OntotalHoursChanging(decimal value);
    partial void OntotalHoursChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public TimeTracker()
		{
			this._TimeTrackerProjects = new EntitySet<TimeTrackerProject>(new Action<TimeTrackerProject>(this.attach_TimeTrackerProjects), new Action<TimeTrackerProject>(this.detach_TimeTrackerProjects));
			this._Member = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_timeTrackerId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid timeTrackerId
		{
			get
			{
				return this._timeTrackerId;
			}
			set
			{
				if ((this._timeTrackerId != value))
				{
					this.OntimeTrackerIdChanging(value);
					this.SendPropertyChanging();
					this._timeTrackerId = value;
					this.SendPropertyChanged("timeTrackerId");
					this.OntimeTrackerIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateIn", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateIn
		{
			get
			{
				return this._dateIn;
			}
			set
			{
				if ((this._dateIn != value))
				{
					this.OndateInChanging(value);
					this.SendPropertyChanging();
					this._dateIn = value;
					this.SendPropertyChanged("dateIn");
					this.OndateInChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateOut", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateOut
		{
			get
			{
				return this._dateOut;
			}
			set
			{
				if ((this._dateOut != value))
				{
					this.OndateOutChanging(value);
					this.SendPropertyChanging();
					this._dateOut = value;
					this.SendPropertyChanged("dateOut");
					this.OndateOutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_totalHours", DbType="Decimal(18,4) NOT NULL")]
		public decimal totalHours
		{
			get
			{
				return this._totalHours;
			}
			set
			{
				if ((this._totalHours != value))
				{
					this.OntotalHoursChanging(value);
					this.SendPropertyChanging();
					this._totalHours = value;
					this.SendPropertyChanged("totalHours");
					this.OntotalHoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TimeTracker_TimeTrackerProject", Storage="_TimeTrackerProjects", ThisKey="timeTrackerId", OtherKey="timeTrackerId")]
		public EntitySet<TimeTrackerProject> TimeTrackerProjects
		{
			get
			{
				return this._TimeTrackerProjects;
			}
			set
			{
				this._TimeTrackerProjects.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_TimeTracker", Storage="_Member", ThisKey="memberId", OtherKey="memberId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.TimeTrackers.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.TimeTrackers.Add(this);
						this._memberId = value.memberId;
					}
					else
					{
						this._memberId = default(System.Guid);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TimeTrackerProjects(TimeTrackerProject entity)
		{
			this.SendPropertyChanging();
			entity.TimeTracker = this;
		}
		
		private void detach_TimeTrackerProjects(TimeTrackerProject entity)
		{
			this.SendPropertyChanging();
			entity.TimeTracker = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tsks")]
	public partial class Tsk : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _tskId;
		
		private System.Guid _projectId;
		
		private System.Guid _memberId;
		
		private System.Guid _memberIdCreated;
		
		private string _name;
		
		private string _description;
		
		private int _numOfSubTsks;
		
		private int _numOfSubTsksCompleted;
		
		private System.DateTimeOffset _dateDue;
		
		private System.DateTimeOffset _dateOriginalDue;
		
		private System.DateTimeOffset _dateCompleted;
		
		private System.DateTimeOffset _dateCreated;
		
		private bool _isCompleted;
		
		private bool _isPersonal;
		
		private bool _isInOffice;
		
		private bool _isProject;
		
		private bool _isDeleted;
		
		private EntityRef<Project> _Project;
		
		private EntityRef<Member> _Member;
		
		private EntityRef<Member> _Member1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OntskIdChanging(System.Guid value);
    partial void OntskIdChanged();
    partial void OnprojectIdChanging(System.Guid value);
    partial void OnprojectIdChanged();
    partial void OnmemberIdChanging(System.Guid value);
    partial void OnmemberIdChanged();
    partial void OnmemberIdCreatedChanging(System.Guid value);
    partial void OnmemberIdCreatedChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnnumOfSubTsksChanging(int value);
    partial void OnnumOfSubTsksChanged();
    partial void OnnumOfSubTsksCompletedChanging(int value);
    partial void OnnumOfSubTsksCompletedChanged();
    partial void OndateDueChanging(System.DateTimeOffset value);
    partial void OndateDueChanged();
    partial void OndateOriginalDueChanging(System.DateTimeOffset value);
    partial void OndateOriginalDueChanged();
    partial void OndateCompletedChanging(System.DateTimeOffset value);
    partial void OndateCompletedChanged();
    partial void OndateCreatedChanging(System.DateTimeOffset value);
    partial void OndateCreatedChanged();
    partial void OnisCompletedChanging(bool value);
    partial void OnisCompletedChanged();
    partial void OnisPersonalChanging(bool value);
    partial void OnisPersonalChanged();
    partial void OnisInOfficeChanging(bool value);
    partial void OnisInOfficeChanged();
    partial void OnisProjectChanging(bool value);
    partial void OnisProjectChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public Tsk()
		{
			this._Project = default(EntityRef<Project>);
			this._Member = default(EntityRef<Member>);
			this._Member1 = default(EntityRef<Member>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tskId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid tskId
		{
			get
			{
				return this._tskId;
			}
			set
			{
				if ((this._tskId != value))
				{
					this.OntskIdChanging(value);
					this.SendPropertyChanging();
					this._tskId = value;
					this.SendPropertyChanged("tskId");
					this.OntskIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_projectId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid projectId
		{
			get
			{
				return this._projectId;
			}
			set
			{
				if ((this._projectId != value))
				{
					if (this._Project.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprojectIdChanging(value);
					this.SendPropertyChanging();
					this._projectId = value;
					this.SendPropertyChanged("projectId");
					this.OnprojectIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					if (this._Member.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberIdCreated", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid memberIdCreated
		{
			get
			{
				return this._memberIdCreated;
			}
			set
			{
				if ((this._memberIdCreated != value))
				{
					if (this._Member1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmemberIdCreatedChanging(value);
					this.SendPropertyChanging();
					this._memberIdCreated = value;
					this.SendPropertyChanged("memberIdCreated");
					this.OnmemberIdCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numOfSubTsks", DbType="Int NOT NULL")]
		public int numOfSubTsks
		{
			get
			{
				return this._numOfSubTsks;
			}
			set
			{
				if ((this._numOfSubTsks != value))
				{
					this.OnnumOfSubTsksChanging(value);
					this.SendPropertyChanging();
					this._numOfSubTsks = value;
					this.SendPropertyChanged("numOfSubTsks");
					this.OnnumOfSubTsksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numOfSubTsksCompleted", DbType="Int NOT NULL")]
		public int numOfSubTsksCompleted
		{
			get
			{
				return this._numOfSubTsksCompleted;
			}
			set
			{
				if ((this._numOfSubTsksCompleted != value))
				{
					this.OnnumOfSubTsksCompletedChanging(value);
					this.SendPropertyChanging();
					this._numOfSubTsksCompleted = value;
					this.SendPropertyChanged("numOfSubTsksCompleted");
					this.OnnumOfSubTsksCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateDue", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateDue
		{
			get
			{
				return this._dateDue;
			}
			set
			{
				if ((this._dateDue != value))
				{
					this.OndateDueChanging(value);
					this.SendPropertyChanging();
					this._dateDue = value;
					this.SendPropertyChanged("dateDue");
					this.OndateDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateOriginalDue", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateOriginalDue
		{
			get
			{
				return this._dateOriginalDue;
			}
			set
			{
				if ((this._dateOriginalDue != value))
				{
					this.OndateOriginalDueChanging(value);
					this.SendPropertyChanging();
					this._dateOriginalDue = value;
					this.SendPropertyChanged("dateOriginalDue");
					this.OndateOriginalDueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCompleted", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateCompleted
		{
			get
			{
				return this._dateCompleted;
			}
			set
			{
				if ((this._dateCompleted != value))
				{
					this.OndateCompletedChanging(value);
					this.SendPropertyChanging();
					this._dateCompleted = value;
					this.SendPropertyChanged("dateCompleted");
					this.OndateCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateCreated", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset dateCreated
		{
			get
			{
				return this._dateCreated;
			}
			set
			{
				if ((this._dateCreated != value))
				{
					this.OndateCreatedChanging(value);
					this.SendPropertyChanging();
					this._dateCreated = value;
					this.SendPropertyChanged("dateCreated");
					this.OndateCreatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isCompleted", DbType="Bit NOT NULL")]
		public bool isCompleted
		{
			get
			{
				return this._isCompleted;
			}
			set
			{
				if ((this._isCompleted != value))
				{
					this.OnisCompletedChanging(value);
					this.SendPropertyChanging();
					this._isCompleted = value;
					this.SendPropertyChanged("isCompleted");
					this.OnisCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isPersonal", DbType="Bit NOT NULL")]
		public bool isPersonal
		{
			get
			{
				return this._isPersonal;
			}
			set
			{
				if ((this._isPersonal != value))
				{
					this.OnisPersonalChanging(value);
					this.SendPropertyChanging();
					this._isPersonal = value;
					this.SendPropertyChanged("isPersonal");
					this.OnisPersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isInOffice", DbType="Bit NOT NULL")]
		public bool isInOffice
		{
			get
			{
				return this._isInOffice;
			}
			set
			{
				if ((this._isInOffice != value))
				{
					this.OnisInOfficeChanging(value);
					this.SendPropertyChanging();
					this._isInOffice = value;
					this.SendPropertyChanged("isInOffice");
					this.OnisInOfficeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isProject", DbType="Bit NOT NULL")]
		public bool isProject
		{
			get
			{
				return this._isProject;
			}
			set
			{
				if ((this._isProject != value))
				{
					this.OnisProjectChanging(value);
					this.SendPropertyChanging();
					this._isProject = value;
					this.SendPropertyChanged("isProject");
					this.OnisProjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Project_Tsk", Storage="_Project", ThisKey="projectId", OtherKey="projectId", IsForeignKey=true)]
		public Project Project
		{
			get
			{
				return this._Project.Entity;
			}
			set
			{
				Project previousValue = this._Project.Entity;
				if (((previousValue != value) 
							|| (this._Project.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Project.Entity = null;
						previousValue.Tsks.Remove(this);
					}
					this._Project.Entity = value;
					if ((value != null))
					{
						value.Tsks.Add(this);
						this._projectId = value.projectId;
					}
					else
					{
						this._projectId = default(System.Guid);
					}
					this.SendPropertyChanged("Project");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Tsk", Storage="_Member", ThisKey="memberId", OtherKey="memberId", IsForeignKey=true)]
		public Member Member
		{
			get
			{
				return this._Member.Entity;
			}
			set
			{
				Member previousValue = this._Member.Entity;
				if (((previousValue != value) 
							|| (this._Member.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member.Entity = null;
						previousValue.Tsks.Remove(this);
					}
					this._Member.Entity = value;
					if ((value != null))
					{
						value.Tsks.Add(this);
						this._memberId = value.memberId;
					}
					else
					{
						this._memberId = default(System.Guid);
					}
					this.SendPropertyChanged("Member");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Tsk1", Storage="_Member1", ThisKey="memberIdCreated", OtherKey="memberId", IsForeignKey=true)]
		public Member Member1
		{
			get
			{
				return this._Member1.Entity;
			}
			set
			{
				Member previousValue = this._Member1.Entity;
				if (((previousValue != value) 
							|| (this._Member1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Member1.Entity = null;
						previousValue.Tsks1.Remove(this);
					}
					this._Member1.Entity = value;
					if ((value != null))
					{
						value.Tsks1.Add(this);
						this._memberIdCreated = value.memberId;
					}
					else
					{
						this._memberIdCreated = default(System.Guid);
					}
					this.SendPropertyChanged("Member1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MaterialPriceOptions")]
	public partial class MaterialPriceOption : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _materialPriceOptionKey;
		
		private string _name;
		
		private string _abbreviation;
		
		private string _description;
		
		private bool _isDeleted;
		
		private EntitySet<Material> _Materials;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaterialPriceOptionKeyChanging(int value);
    partial void OnmaterialPriceOptionKeyChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnabbreviationChanging(string value);
    partial void OnabbreviationChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public MaterialPriceOption()
		{
			this._Materials = new EntitySet<Material>(new Action<Material>(this.attach_Materials), new Action<Material>(this.detach_Materials));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialPriceOptionKey", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int materialPriceOptionKey
		{
			get
			{
				return this._materialPriceOptionKey;
			}
			set
			{
				if ((this._materialPriceOptionKey != value))
				{
					this.OnmaterialPriceOptionKeyChanging(value);
					this.SendPropertyChanging();
					this._materialPriceOptionKey = value;
					this.SendPropertyChanged("materialPriceOptionKey");
					this.OnmaterialPriceOptionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_abbreviation", DbType="NVarChar(10) NOT NULL", CanBeNull=false)]
		public string abbreviation
		{
			get
			{
				return this._abbreviation;
			}
			set
			{
				if ((this._abbreviation != value))
				{
					this.OnabbreviationChanging(value);
					this.SendPropertyChanging();
					this._abbreviation = value;
					this.SendPropertyChanged("abbreviation");
					this.OnabbreviationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaterialPriceOption_Material", Storage="_Materials", ThisKey="materialPriceOptionKey", OtherKey="materialPriceOptionKey")]
		public EntitySet<Material> Materials
		{
			get
			{
				return this._Materials;
			}
			set
			{
				this._Materials.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Materials(Material entity)
		{
			this.SendPropertyChanging();
			entity.MaterialPriceOption = this;
		}
		
		private void detach_Materials(Material entity)
		{
			this.SendPropertyChanging();
			entity.MaterialPriceOption = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Materials")]
	public partial class Material : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _materialId;
		
		private System.Guid _disciplineId;
		
		private string _name;
		
		private string _description;
		
		private string _website;
		
		private decimal _priceMin;
		
		private decimal _priceMax;
		
		private int _materialPriceOptionKey;
		
		private string _manufacturer;
		
		private string _modelNumber;
		
		private string _tags;
		
		private string _notes;
		
		private bool _isDeleted;
		
		private EntitySet<MaterialTagMaterial> _MaterialTagMaterials;
		
		private EntityRef<Discipline> _Discipline;
		
		private EntityRef<MaterialPriceOption> _MaterialPriceOption;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmaterialIdChanging(System.Guid value);
    partial void OnmaterialIdChanged();
    partial void OndisciplineIdChanging(System.Guid value);
    partial void OndisciplineIdChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnwebsiteChanging(string value);
    partial void OnwebsiteChanged();
    partial void OnpriceMinChanging(decimal value);
    partial void OnpriceMinChanged();
    partial void OnpriceMaxChanging(decimal value);
    partial void OnpriceMaxChanged();
    partial void OnmaterialPriceOptionKeyChanging(int value);
    partial void OnmaterialPriceOptionKeyChanged();
    partial void OnmanufacturerChanging(string value);
    partial void OnmanufacturerChanged();
    partial void OnmodelNumberChanging(string value);
    partial void OnmodelNumberChanged();
    partial void OntagsChanging(string value);
    partial void OntagsChanged();
    partial void OnnotesChanging(string value);
    partial void OnnotesChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public Material()
		{
			this._MaterialTagMaterials = new EntitySet<MaterialTagMaterial>(new Action<MaterialTagMaterial>(this.attach_MaterialTagMaterials), new Action<MaterialTagMaterial>(this.detach_MaterialTagMaterials));
			this._Discipline = default(EntityRef<Discipline>);
			this._MaterialPriceOption = default(EntityRef<MaterialPriceOption>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid materialId
		{
			get
			{
				return this._materialId;
			}
			set
			{
				if ((this._materialId != value))
				{
					this.OnmaterialIdChanging(value);
					this.SendPropertyChanging();
					this._materialId = value;
					this.SendPropertyChanged("materialId");
					this.OnmaterialIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_disciplineId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid disciplineId
		{
			get
			{
				return this._disciplineId;
			}
			set
			{
				if ((this._disciplineId != value))
				{
					if (this._Discipline.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OndisciplineIdChanging(value);
					this.SendPropertyChanging();
					this._disciplineId = value;
					this.SendPropertyChanged("disciplineId");
					this.OndisciplineIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(500) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_website", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string website
		{
			get
			{
				return this._website;
			}
			set
			{
				if ((this._website != value))
				{
					this.OnwebsiteChanging(value);
					this.SendPropertyChanging();
					this._website = value;
					this.SendPropertyChanged("website");
					this.OnwebsiteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priceMin", DbType="Decimal(18,4) NOT NULL")]
		public decimal priceMin
		{
			get
			{
				return this._priceMin;
			}
			set
			{
				if ((this._priceMin != value))
				{
					this.OnpriceMinChanging(value);
					this.SendPropertyChanging();
					this._priceMin = value;
					this.SendPropertyChanged("priceMin");
					this.OnpriceMinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_priceMax", DbType="Decimal(18,4) NOT NULL")]
		public decimal priceMax
		{
			get
			{
				return this._priceMax;
			}
			set
			{
				if ((this._priceMax != value))
				{
					this.OnpriceMaxChanging(value);
					this.SendPropertyChanging();
					this._priceMax = value;
					this.SendPropertyChanged("priceMax");
					this.OnpriceMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_materialPriceOptionKey", DbType="Int NOT NULL")]
		public int materialPriceOptionKey
		{
			get
			{
				return this._materialPriceOptionKey;
			}
			set
			{
				if ((this._materialPriceOptionKey != value))
				{
					if (this._MaterialPriceOption.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnmaterialPriceOptionKeyChanging(value);
					this.SendPropertyChanging();
					this._materialPriceOptionKey = value;
					this.SendPropertyChanged("materialPriceOptionKey");
					this.OnmaterialPriceOptionKeyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_manufacturer", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string manufacturer
		{
			get
			{
				return this._manufacturer;
			}
			set
			{
				if ((this._manufacturer != value))
				{
					this.OnmanufacturerChanging(value);
					this.SendPropertyChanging();
					this._manufacturer = value;
					this.SendPropertyChanged("manufacturer");
					this.OnmanufacturerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modelNumber", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string modelNumber
		{
			get
			{
				return this._modelNumber;
			}
			set
			{
				if ((this._modelNumber != value))
				{
					this.OnmodelNumberChanging(value);
					this.SendPropertyChanging();
					this._modelNumber = value;
					this.SendPropertyChanged("modelNumber");
					this.OnmodelNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tags", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string tags
		{
			get
			{
				return this._tags;
			}
			set
			{
				if ((this._tags != value))
				{
					this.OntagsChanging(value);
					this.SendPropertyChanging();
					this._tags = value;
					this.SendPropertyChanged("tags");
					this.OntagsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notes", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string notes
		{
			get
			{
				return this._notes;
			}
			set
			{
				if ((this._notes != value))
				{
					this.OnnotesChanging(value);
					this.SendPropertyChanging();
					this._notes = value;
					this.SendPropertyChanged("notes");
					this.OnnotesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Material_MaterialTagMaterial", Storage="_MaterialTagMaterials", ThisKey="materialId", OtherKey="materialId")]
		public EntitySet<MaterialTagMaterial> MaterialTagMaterials
		{
			get
			{
				return this._MaterialTagMaterials;
			}
			set
			{
				this._MaterialTagMaterials.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Discipline_Material", Storage="_Discipline", ThisKey="disciplineId", OtherKey="disciplineId", IsForeignKey=true)]
		public Discipline Discipline
		{
			get
			{
				return this._Discipline.Entity;
			}
			set
			{
				Discipline previousValue = this._Discipline.Entity;
				if (((previousValue != value) 
							|| (this._Discipline.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Discipline.Entity = null;
						previousValue.Materials.Remove(this);
					}
					this._Discipline.Entity = value;
					if ((value != null))
					{
						value.Materials.Add(this);
						this._disciplineId = value.disciplineId;
					}
					else
					{
						this._disciplineId = default(System.Guid);
					}
					this.SendPropertyChanged("Discipline");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MaterialPriceOption_Material", Storage="_MaterialPriceOption", ThisKey="materialPriceOptionKey", OtherKey="materialPriceOptionKey", IsForeignKey=true)]
		public MaterialPriceOption MaterialPriceOption
		{
			get
			{
				return this._MaterialPriceOption.Entity;
			}
			set
			{
				MaterialPriceOption previousValue = this._MaterialPriceOption.Entity;
				if (((previousValue != value) 
							|| (this._MaterialPriceOption.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MaterialPriceOption.Entity = null;
						previousValue.Materials.Remove(this);
					}
					this._MaterialPriceOption.Entity = value;
					if ((value != null))
					{
						value.Materials.Add(this);
						this._materialPriceOptionKey = value.materialPriceOptionKey;
					}
					else
					{
						this._materialPriceOptionKey = default(int);
					}
					this.SendPropertyChanged("MaterialPriceOption");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MaterialTagMaterials(MaterialTagMaterial entity)
		{
			this.SendPropertyChanging();
			entity.Material = this;
		}
		
		private void detach_MaterialTagMaterials(MaterialTagMaterial entity)
		{
			this.SendPropertyChanging();
			entity.Material = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Members")]
	public partial class Member : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Guid _memberId;
		
		private System.Guid _activeCompanyId;
		
		private System.Guid _token;
		
		private System.Guid _tokenApi;
		
		private string _googleId;
		
		private string _stripeId;
		
		private string _firstName;
		
		private string _lastName;
		
		private string _email;
		
		private string _originalEmail;
		
		private string _phone;
		
		private string _path;
		
		private string _originalFileName;
		
		private System.Data.Linq.Binary _password;
		
		private System.Data.Linq.Binary _keyValue;
		
		private System.Data.Linq.Binary _iVValue;
		
		private System.Nullable<System.Guid> _forgotPasswordToken;
		
		private System.Nullable<System.DateTimeOffset> _forgotPasswordDateTime;
		
		private System.Nullable<int> _keyCode;
		
		private System.Nullable<System.DateTimeOffset> _keyCodeDateTime;
		
		private System.DateTimeOffset _lastLoginDateTime;
		
		private bool _isValidated;
		
		private bool _isDeleted;
		
		private EntitySet<Log> _Logs;
		
		private EntitySet<MemberCompany> _MemberCompanies;
		
		private EntitySet<MemberIpAddress> _MemberIpAddresses;
		
		private EntitySet<MemberRole> _MemberRoles;
		
		private EntitySet<ProjectMember> _ProjectMembers;
		
		private EntitySet<ProjectZoneArchive> _ProjectZoneArchives;
		
		private EntitySet<ProjectZoneArchive> _ProjectZoneArchives1;
		
		private EntitySet<SubTsk> _SubTsks;
		
		private EntitySet<SubTsk> _SubTsks1;
		
		private EntitySet<TimeTracker> _TimeTrackers;
		
		private EntitySet<Tsk> _Tsks;
		
		private EntitySet<Tsk> _Tsks1;
		
		private EntityRef<Company> _Company;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmemberIdChanging(System.Guid value);
    partial void OnmemberIdChanged();
    partial void OnactiveCompanyIdChanging(System.Guid value);
    partial void OnactiveCompanyIdChanged();
    partial void OntokenChanging(System.Guid value);
    partial void OntokenChanged();
    partial void OntokenApiChanging(System.Guid value);
    partial void OntokenApiChanged();
    partial void OngoogleIdChanging(string value);
    partial void OngoogleIdChanged();
    partial void OnstripeIdChanging(string value);
    partial void OnstripeIdChanged();
    partial void OnfirstNameChanging(string value);
    partial void OnfirstNameChanged();
    partial void OnlastNameChanging(string value);
    partial void OnlastNameChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnoriginalEmailChanging(string value);
    partial void OnoriginalEmailChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void OnpathChanging(string value);
    partial void OnpathChanged();
    partial void OnoriginalFileNameChanging(string value);
    partial void OnoriginalFileNameChanged();
    partial void OnpasswordChanging(System.Data.Linq.Binary value);
    partial void OnpasswordChanged();
    partial void OnkeyValueChanging(System.Data.Linq.Binary value);
    partial void OnkeyValueChanged();
    partial void OniVValueChanging(System.Data.Linq.Binary value);
    partial void OniVValueChanged();
    partial void OnforgotPasswordTokenChanging(System.Nullable<System.Guid> value);
    partial void OnforgotPasswordTokenChanged();
    partial void OnforgotPasswordDateTimeChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnforgotPasswordDateTimeChanged();
    partial void OnkeyCodeChanging(System.Nullable<int> value);
    partial void OnkeyCodeChanged();
    partial void OnkeyCodeDateTimeChanging(System.Nullable<System.DateTimeOffset> value);
    partial void OnkeyCodeDateTimeChanged();
    partial void OnlastLoginDateTimeChanging(System.DateTimeOffset value);
    partial void OnlastLoginDateTimeChanged();
    partial void OnisValidatedChanging(bool value);
    partial void OnisValidatedChanged();
    partial void OnisDeletedChanging(bool value);
    partial void OnisDeletedChanged();
    #endregion
		
		public Member()
		{
			this._Logs = new EntitySet<Log>(new Action<Log>(this.attach_Logs), new Action<Log>(this.detach_Logs));
			this._MemberCompanies = new EntitySet<MemberCompany>(new Action<MemberCompany>(this.attach_MemberCompanies), new Action<MemberCompany>(this.detach_MemberCompanies));
			this._MemberIpAddresses = new EntitySet<MemberIpAddress>(new Action<MemberIpAddress>(this.attach_MemberIpAddresses), new Action<MemberIpAddress>(this.detach_MemberIpAddresses));
			this._MemberRoles = new EntitySet<MemberRole>(new Action<MemberRole>(this.attach_MemberRoles), new Action<MemberRole>(this.detach_MemberRoles));
			this._ProjectMembers = new EntitySet<ProjectMember>(new Action<ProjectMember>(this.attach_ProjectMembers), new Action<ProjectMember>(this.detach_ProjectMembers));
			this._ProjectZoneArchives = new EntitySet<ProjectZoneArchive>(new Action<ProjectZoneArchive>(this.attach_ProjectZoneArchives), new Action<ProjectZoneArchive>(this.detach_ProjectZoneArchives));
			this._ProjectZoneArchives1 = new EntitySet<ProjectZoneArchive>(new Action<ProjectZoneArchive>(this.attach_ProjectZoneArchives1), new Action<ProjectZoneArchive>(this.detach_ProjectZoneArchives1));
			this._SubTsks = new EntitySet<SubTsk>(new Action<SubTsk>(this.attach_SubTsks), new Action<SubTsk>(this.detach_SubTsks));
			this._SubTsks1 = new EntitySet<SubTsk>(new Action<SubTsk>(this.attach_SubTsks1), new Action<SubTsk>(this.detach_SubTsks1));
			this._TimeTrackers = new EntitySet<TimeTracker>(new Action<TimeTracker>(this.attach_TimeTrackers), new Action<TimeTracker>(this.detach_TimeTrackers));
			this._Tsks = new EntitySet<Tsk>(new Action<Tsk>(this.attach_Tsks), new Action<Tsk>(this.detach_Tsks));
			this._Tsks1 = new EntitySet<Tsk>(new Action<Tsk>(this.attach_Tsks1), new Action<Tsk>(this.detach_Tsks1));
			this._Company = default(EntityRef<Company>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_memberId", DbType="UniqueIdentifier NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public System.Guid memberId
		{
			get
			{
				return this._memberId;
			}
			set
			{
				if ((this._memberId != value))
				{
					this.OnmemberIdChanging(value);
					this.SendPropertyChanging();
					this._memberId = value;
					this.SendPropertyChanged("memberId");
					this.OnmemberIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_activeCompanyId", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid activeCompanyId
		{
			get
			{
				return this._activeCompanyId;
			}
			set
			{
				if ((this._activeCompanyId != value))
				{
					if (this._Company.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnactiveCompanyIdChanging(value);
					this.SendPropertyChanging();
					this._activeCompanyId = value;
					this.SendPropertyChanged("activeCompanyId");
					this.OnactiveCompanyIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_token", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid token
		{
			get
			{
				return this._token;
			}
			set
			{
				if ((this._token != value))
				{
					this.OntokenChanging(value);
					this.SendPropertyChanging();
					this._token = value;
					this.SendPropertyChanged("token");
					this.OntokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tokenApi", DbType="UniqueIdentifier NOT NULL")]
		public System.Guid tokenApi
		{
			get
			{
				return this._tokenApi;
			}
			set
			{
				if ((this._tokenApi != value))
				{
					this.OntokenApiChanging(value);
					this.SendPropertyChanging();
					this._tokenApi = value;
					this.SendPropertyChanged("tokenApi");
					this.OntokenApiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_googleId", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string googleId
		{
			get
			{
				return this._googleId;
			}
			set
			{
				if ((this._googleId != value))
				{
					this.OngoogleIdChanging(value);
					this.SendPropertyChanging();
					this._googleId = value;
					this.SendPropertyChanged("googleId");
					this.OngoogleIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stripeId", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string stripeId
		{
			get
			{
				return this._stripeId;
			}
			set
			{
				if ((this._stripeId != value))
				{
					this.OnstripeIdChanging(value);
					this.SendPropertyChanging();
					this._stripeId = value;
					this.SendPropertyChanged("stripeId");
					this.OnstripeIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this.OnfirstNameChanging(value);
					this.SendPropertyChanging();
					this._firstName = value;
					this.SendPropertyChanged("firstName");
					this.OnfirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this.OnlastNameChanging(value);
					this.SendPropertyChanging();
					this._lastName = value;
					this.SendPropertyChanged("lastName");
					this.OnlastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_originalEmail", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string originalEmail
		{
			get
			{
				return this._originalEmail;
			}
			set
			{
				if ((this._originalEmail != value))
				{
					this.OnoriginalEmailChanging(value);
					this.SendPropertyChanging();
					this._originalEmail = value;
					this.SendPropertyChanged("originalEmail");
					this.OnoriginalEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_path", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string path
		{
			get
			{
				return this._path;
			}
			set
			{
				if ((this._path != value))
				{
					this.OnpathChanging(value);
					this.SendPropertyChanging();
					this._path = value;
					this.SendPropertyChanged("path");
					this.OnpathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_originalFileName", DbType="NVarChar(1000) NOT NULL", CanBeNull=false)]
		public string originalFileName
		{
			get
			{
				return this._originalFileName;
			}
			set
			{
				if ((this._originalFileName != value))
				{
					this.OnoriginalFileNameChanging(value);
					this.SendPropertyChanging();
					this._originalFileName = value;
					this.SendPropertyChanged("originalFileName");
					this.OnoriginalFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keyValue", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary keyValue
		{
			get
			{
				return this._keyValue;
			}
			set
			{
				if ((this._keyValue != value))
				{
					this.OnkeyValueChanging(value);
					this.SendPropertyChanging();
					this._keyValue = value;
					this.SendPropertyChanged("keyValue");
					this.OnkeyValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_iVValue", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary iVValue
		{
			get
			{
				return this._iVValue;
			}
			set
			{
				if ((this._iVValue != value))
				{
					this.OniVValueChanging(value);
					this.SendPropertyChanging();
					this._iVValue = value;
					this.SendPropertyChanged("iVValue");
					this.OniVValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_forgotPasswordToken", DbType="UniqueIdentifier")]
		public System.Nullable<System.Guid> forgotPasswordToken
		{
			get
			{
				return this._forgotPasswordToken;
			}
			set
			{
				if ((this._forgotPasswordToken != value))
				{
					this.OnforgotPasswordTokenChanging(value);
					this.SendPropertyChanging();
					this._forgotPasswordToken = value;
					this.SendPropertyChanged("forgotPasswordToken");
					this.OnforgotPasswordTokenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_forgotPasswordDateTime", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> forgotPasswordDateTime
		{
			get
			{
				return this._forgotPasswordDateTime;
			}
			set
			{
				if ((this._forgotPasswordDateTime != value))
				{
					this.OnforgotPasswordDateTimeChanging(value);
					this.SendPropertyChanging();
					this._forgotPasswordDateTime = value;
					this.SendPropertyChanged("forgotPasswordDateTime");
					this.OnforgotPasswordDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keyCode", DbType="Int")]
		public System.Nullable<int> keyCode
		{
			get
			{
				return this._keyCode;
			}
			set
			{
				if ((this._keyCode != value))
				{
					this.OnkeyCodeChanging(value);
					this.SendPropertyChanging();
					this._keyCode = value;
					this.SendPropertyChanged("keyCode");
					this.OnkeyCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_keyCodeDateTime", DbType="DateTimeOffset")]
		public System.Nullable<System.DateTimeOffset> keyCodeDateTime
		{
			get
			{
				return this._keyCodeDateTime;
			}
			set
			{
				if ((this._keyCodeDateTime != value))
				{
					this.OnkeyCodeDateTimeChanging(value);
					this.SendPropertyChanging();
					this._keyCodeDateTime = value;
					this.SendPropertyChanged("keyCodeDateTime");
					this.OnkeyCodeDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastLoginDateTime", DbType="DateTimeOffset NOT NULL")]
		public System.DateTimeOffset lastLoginDateTime
		{
			get
			{
				return this._lastLoginDateTime;
			}
			set
			{
				if ((this._lastLoginDateTime != value))
				{
					this.OnlastLoginDateTimeChanging(value);
					this.SendPropertyChanging();
					this._lastLoginDateTime = value;
					this.SendPropertyChanged("lastLoginDateTime");
					this.OnlastLoginDateTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isValidated", DbType="Bit NOT NULL")]
		public bool isValidated
		{
			get
			{
				return this._isValidated;
			}
			set
			{
				if ((this._isValidated != value))
				{
					this.OnisValidatedChanging(value);
					this.SendPropertyChanging();
					this._isValidated = value;
					this.SendPropertyChanged("isValidated");
					this.OnisValidatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDeleted", DbType="Bit NOT NULL")]
		public bool isDeleted
		{
			get
			{
				return this._isDeleted;
			}
			set
			{
				if ((this._isDeleted != value))
				{
					this.OnisDeletedChanging(value);
					this.SendPropertyChanging();
					this._isDeleted = value;
					this.SendPropertyChanged("isDeleted");
					this.OnisDeletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Log", Storage="_Logs", ThisKey="memberId", OtherKey="memberId")]
		public EntitySet<Log> Logs
		{
			get
			{
				return this._Logs;
			}
			set
			{
				this._Logs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberCompany", Storage="_MemberCompanies", ThisKey="memberId", OtherKey="memberId")]
		public EntitySet<MemberCompany> MemberCompanies
		{
			get
			{
				return this._MemberCompanies;
			}
			set
			{
				this._MemberCompanies.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberIpAddress", Storage="_MemberIpAddresses", ThisKey="memberId", OtherKey="memberId")]
		public EntitySet<MemberIpAddress> MemberIpAddresses
		{
			get
			{
				return this._MemberIpAddresses;
			}
			set
			{
				this._MemberIpAddresses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_MemberRole", Storage="_MemberRoles", ThisKey="memberId", OtherKey="memberId")]
		public EntitySet<MemberRole> MemberRoles
		{
			get
			{
				return this._MemberRoles;
			}
			set
			{
				this._MemberRoles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_ProjectMember", Storage="_ProjectMembers", ThisKey="memberId", OtherKey="memberId")]
		public EntitySet<ProjectMember> ProjectMembers
		{
			get
			{
				return this._ProjectMembers;
			}
			set
			{
				this._ProjectMembers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_ProjectZoneArchive", Storage="_ProjectZoneArchives", ThisKey="memberId", OtherKey="memberStartId")]
		public EntitySet<ProjectZoneArchive> ProjectZoneArchives
		{
			get
			{
				return this._ProjectZoneArchives;
			}
			set
			{
				this._ProjectZoneArchives.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_ProjectZoneArchive1", Storage="_ProjectZoneArchives1", ThisKey="memberId", OtherKey="memberEndId")]
		public EntitySet<ProjectZoneArchive> ProjectZoneArchives1
		{
			get
			{
				return this._ProjectZoneArchives1;
			}
			set
			{
				this._ProjectZoneArchives1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_SubTsk", Storage="_SubTsks", ThisKey="memberId", OtherKey="memberId")]
		public EntitySet<SubTsk> SubTsks
		{
			get
			{
				return this._SubTsks;
			}
			set
			{
				this._SubTsks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_SubTsk1", Storage="_SubTsks1", ThisKey="memberId", OtherKey="memberIdCreated")]
		public EntitySet<SubTsk> SubTsks1
		{
			get
			{
				return this._SubTsks1;
			}
			set
			{
				this._SubTsks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_TimeTracker", Storage="_TimeTrackers", ThisKey="memberId", OtherKey="memberId")]
		public EntitySet<TimeTracker> TimeTrackers
		{
			get
			{
				return this._TimeTrackers;
			}
			set
			{
				this._TimeTrackers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Tsk", Storage="_Tsks", ThisKey="memberId", OtherKey="memberId")]
		public EntitySet<Tsk> Tsks
		{
			get
			{
				return this._Tsks;
			}
			set
			{
				this._Tsks.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Member_Tsk1", Storage="_Tsks1", ThisKey="memberId", OtherKey="memberIdCreated")]
		public EntitySet<Tsk> Tsks1
		{
			get
			{
				return this._Tsks1;
			}
			set
			{
				this._Tsks1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Company_Member", Storage="_Company", ThisKey="activeCompanyId", OtherKey="companyId", IsForeignKey=true)]
		public Company Company
		{
			get
			{
				return this._Company.Entity;
			}
			set
			{
				Company previousValue = this._Company.Entity;
				if (((previousValue != value) 
							|| (this._Company.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Company.Entity = null;
						previousValue.Members.Remove(this);
					}
					this._Company.Entity = value;
					if ((value != null))
					{
						value.Members.Add(this);
						this._activeCompanyId = value.companyId;
					}
					else
					{
						this._activeCompanyId = default(System.Guid);
					}
					this.SendPropertyChanged("Company");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Logs(Log entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Logs(Log entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_MemberCompanies(MemberCompany entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_MemberCompanies(MemberCompany entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_MemberIpAddresses(MemberIpAddress entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_MemberIpAddresses(MemberIpAddress entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_MemberRoles(MemberRole entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_MemberRoles(MemberRole entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_ProjectMembers(ProjectMember entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_ProjectMembers(ProjectMember entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_ProjectZoneArchives(ProjectZoneArchive entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_ProjectZoneArchives(ProjectZoneArchive entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_ProjectZoneArchives1(ProjectZoneArchive entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = this;
		}
		
		private void detach_ProjectZoneArchives1(ProjectZoneArchive entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = null;
		}
		
		private void attach_SubTsks(SubTsk entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_SubTsks(SubTsk entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_SubTsks1(SubTsk entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = this;
		}
		
		private void detach_SubTsks1(SubTsk entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = null;
		}
		
		private void attach_TimeTrackers(TimeTracker entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_TimeTrackers(TimeTracker entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Tsks(Tsk entity)
		{
			this.SendPropertyChanging();
			entity.Member = this;
		}
		
		private void detach_Tsks(Tsk entity)
		{
			this.SendPropertyChanging();
			entity.Member = null;
		}
		
		private void attach_Tsks1(Tsk entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = this;
		}
		
		private void detach_Tsks1(Tsk entity)
		{
			this.SendPropertyChanging();
			entity.Member1 = null;
		}
	}
}
#pragma warning restore 1591
